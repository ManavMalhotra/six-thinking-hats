{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSocketStore } from \"../store\";\nimport socketSingleton from \"../SocketManager\";\nimport HatColor from \"./HatColor\";\nimport TimerComponent from \"./TimerComponent\";\nimport UserCard from \"./UserCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ParticipantsScreen = function ParticipantsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var userId = useSocketStore(function (state) {\n    return state.userId;\n  });\n  var isAdmin = useSocketStore(function (state) {\n    return state.isAdmin;\n  });\n  var hatColor = useSocketStore(function (state) {\n    return state.hatColor;\n  });\n  var roomId = useSocketStore(function (state) {\n    return state.roomId;\n  });\n  var mySession = useSocketStore(function (state) {\n    return state.mySession;\n  });\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    participants = _useState2[0],\n    setParticipants = _useState2[1];\n  var socket = socketSingleton.getSocket();\n  useEffect(function () {\n    socket.on(\"roomData\", function (_ref2) {\n      var users = _ref2.users;\n      console.log(\"Event roomData received\");\n      console.log(users);\n      var updatedUsers = users.map(function (user) {\n        return _objectSpread(_objectSpread({}, user), {}, {\n          name: user.name || \"Anonymous\"\n        });\n      });\n      setParticipants(updatedUsers);\n    });\n  }, []);\n  return _jsx(Text, {\n    children: \"TESTING\"\n  });\n};\nexport default ParticipantsScreen;","map":{"version":3,"names":["React","useState","useEffect","Text","View","SafeAreaView","StyleSheet","useSocketStore","socketSingleton","HatColor","TimerComponent","UserCard","jsx","_jsx","ParticipantsScreen","_ref","navigation","userId","state","isAdmin","hatColor","roomId","mySession","_useState","_useState2","_slicedToArray","participants","setParticipants","socket","getSocket","on","_ref2","users","console","log","updatedUsers","map","user","_objectSpread","name","children"],"sources":["C:/Users/manav/projects/ironman_client/components/ParticipantsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Text, View, SafeAreaView, StyleSheet } from \"react-native\";\r\nimport { useSocketStore } from \"../store\";\r\nimport socketSingleton from \"../SocketManager\";\r\nimport HatColor from \"./HatColor\";\r\nimport TimerComponent from \"./TimerComponent\";\r\nimport UserCard from \"./UserCard\";\r\n\r\nconst ParticipantsScreen = ({ navigation }) => {\r\n  // data which come from store\r\n  // userId: null,\r\n  // isAdmin: null,\r\n  // hatColor: null,\r\n  // roomId: null,\r\n  // mySession: [],\r\n\r\n  const userId = useSocketStore((state) => state.userId);\r\n  const isAdmin = useSocketStore((state) => state.isAdmin);\r\n  const hatColor = useSocketStore((state) => state.hatColor);\r\n  const roomId = useSocketStore((state) => state.roomId);\r\n  const mySession = useSocketStore((state) => state.mySession);\r\n\r\n  const [participants, setParticipants] = useState([]);\r\n\r\n  const socket = socketSingleton.getSocket();\r\n\r\n  useEffect(() => {\r\n    socket.on(\"roomData\", ({ users }) => {\r\n      console.log(\"Event roomData received\");\r\n      console.log(users);\r\n\r\n      const updatedUsers = users.map((user) => ({\r\n        ...user,\r\n        name: user.name || \"Anonymous\",\r\n      }));\r\n\r\n      // Update participants state with the received data\r\n      setParticipants(updatedUsers);\r\n    });\r\n  }, []);\r\n\r\n  return <Text>TESTING</Text>;\r\n};\r\n\r\nexport default ParticipantsScreen;\r\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,UAAA;AAEnD,SAASC,cAAc;AACvB,OAAOC,eAAe;AACtB,OAAOC,QAAQ;AACf,OAAOC,cAAc;AACrB,OAAOC,QAAQ;AAAmB,SAAAC,GAAA,IAAAC,IAAA;AAElC,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAQtC,IAAMC,MAAM,GAAGV,cAAc,CAAC,UAACW,KAAK;IAAA,OAAKA,KAAK,CAACD,MAAM;EAAA,EAAC;EACtD,IAAME,OAAO,GAAGZ,cAAc,CAAC,UAACW,KAAK;IAAA,OAAKA,KAAK,CAACC,OAAO;EAAA,EAAC;EACxD,IAAMC,QAAQ,GAAGb,cAAc,CAAC,UAACW,KAAK;IAAA,OAAKA,KAAK,CAACE,QAAQ;EAAA,EAAC;EAC1D,IAAMC,MAAM,GAAGd,cAAc,CAAC,UAACW,KAAK;IAAA,OAAKA,KAAK,CAACG,MAAM;EAAA,EAAC;EACtD,IAAMC,SAAS,GAAGf,cAAc,CAAC,UAACW,KAAK;IAAA,OAAKA,KAAK,CAACI,SAAS;EAAA,EAAC;EAE5D,IAAAC,SAAA,GAAwCtB,QAAQ,CAAC,EAAE,CAAC;IAAAuB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EAEpC,IAAMI,MAAM,GAAGpB,eAAe,CAACqB,SAAS,CAAC,CAAC;EAE1C3B,SAAS,CAAC,YAAM;IACd0B,MAAM,CAACE,EAAE,CAAC,UAAU,EAAE,UAAAC,KAAA,EAAe;MAAA,IAAZC,KAAK,GAAAD,KAAA,CAALC,KAAK;MAC5BC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtCD,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAElB,IAAMG,YAAY,GAAGH,KAAK,CAACI,GAAG,CAAC,UAACC,IAAI;QAAA,OAAAC,aAAA,CAAAA,aAAA,KAC/BD,IAAI;UACPE,IAAI,EAAEF,IAAI,CAACE,IAAI,IAAI;QAAW;MAAA,CAC9B,CAAC;MAGHZ,eAAe,CAACQ,YAAY,CAAC;IAC/B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOtB,IAAA,CAACV,IAAI;IAAAqC,QAAA,EAAC;EAAO,CAAM,CAAC;AAC7B,CAAC;AAED,eAAe1B,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}