{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { Image } from \"expo-image\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { horizontalScale, moderateScale, verticalScale } from \"../metric\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Navbar = function Navbar() {\n  var navigation = useNavigation();\n  var handleBackPress = function handleBackPress() {\n    navigation.goBack();\n  };\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      style: styles.navbar,\n      children: [_jsx(TouchableOpacity, {\n        onPress: handleBackPress,\n        children: _jsx(Image, {\n          style: styles.icon,\n          source: require(\"../assets/menu.svg\")\n        })\n      }), _jsx(Image, {\n        style: styles.tinkLogo,\n        source: require(\"../assets/tink-logo-1.png\")\n      }), _jsx(Image, {\n        style: styles.menuIconLayout,\n        source: require(\"../assets/ellipse-15.svg\")\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  navbar: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    marginTop: verticalScale(20),\n    paddingHorizontal: horizontalScale(20),\n    paddingVertical: verticalScale(20)\n  },\n  icon: {\n    width: 50,\n    height: 50,\n    color: \"black\"\n  },\n  tinkLogo: {\n    width: 106,\n    height: 32\n  },\n  menuIconLayout: {\n    height: 24,\n    width: 24\n  }\n});\nexport default Navbar;","map":{"version":3,"names":["React","View","StyleSheet","TouchableOpacity","SafeAreaView","Image","useNavigation","horizontalScale","moderateScale","verticalScale","jsx","_jsx","jsxs","_jsxs","Navbar","navigation","handleBackPress","goBack","children","style","styles","navbar","onPress","icon","source","require","tinkLogo","menuIconLayout","create","flexDirection","justifyContent","alignItems","backgroundColor","marginTop","paddingHorizontal","paddingVertical","width","height","color"],"sources":["C:/Users/manav/projects/ironman_client/components/Navbar.js"],"sourcesContent":["import React from \"react\";\r\nimport { View, StyleSheet, TouchableOpacity, SafeAreaView } from \"react-native\";\r\nimport { Image } from \"expo-image\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { horizontalScale, moderateScale, verticalScale } from \"../metric\";\r\n\r\nconst Navbar = () => {\r\n  const navigation = useNavigation();\r\n\r\n  const handleBackPress = () => {\r\n    navigation.goBack();\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      <View style={styles.navbar}>\r\n        <TouchableOpacity onPress={handleBackPress}>\r\n          <Image style={styles.icon} source={require(\"../assets/menu.svg\")} />\r\n        </TouchableOpacity>\r\n\r\n        <Image\r\n          style={styles.tinkLogo}\r\n          source={require(\"../assets/tink-logo-1.png\")}\r\n        />\r\n        <Image\r\n          style={styles.menuIconLayout}\r\n          source={require(\"../assets/ellipse-15.svg\")}\r\n        />\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  navbar: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n    // borderBottomWidth: 1,\r\n    // borderBottomColor: \"lightgrey\",\r\n    marginTop: verticalScale(20),\r\n    paddingHorizontal: horizontalScale(20),\r\n    paddingVertical: verticalScale(20),\r\n  },\r\n  icon: {\r\n    width: 50,\r\n    height: 50,\r\n    color: \"black\",\r\n  },\r\n  tinkLogo: {\r\n    width: 106,\r\n    height: 32,\r\n  },\r\n  menuIconLayout: {\r\n    height: 24,\r\n    width: 24,\r\n  },\r\n});\r\n\r\nexport default Navbar;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,YAAA;AAE1B,SAASC,KAAK,QAAQ,YAAY;AAClC,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,eAAe,EAAEC,aAAa,EAAEC,aAAa;AAAoB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1E,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;EACnB,IAAMC,UAAU,GAAGT,aAAa,CAAC,CAAC;EAElC,IAAMU,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5BD,UAAU,CAACE,MAAM,CAAC,CAAC;EACrB,CAAC;EAED,OACEN,IAAA,CAACP,YAAY;IAAAc,QAAA,EACXL,KAAA,CAACZ,IAAI;MAACkB,KAAK,EAAEC,MAAM,CAACC,MAAO;MAAAH,QAAA,GACzBP,IAAA,CAACR,gBAAgB;QAACmB,OAAO,EAAEN,eAAgB;QAAAE,QAAA,EACzCP,IAAA,CAACN,KAAK;UAACc,KAAK,EAAEC,MAAM,CAACG,IAAK;UAACC,MAAM,EAAEC,OAAO,qBAAqB;QAAE,CAAE;MAAC,CACpD,CAAC,EAEnBd,IAAA,CAACN,KAAK;QACJc,KAAK,EAAEC,MAAM,CAACM,QAAS;QACvBF,MAAM,EAAEC,OAAO,4BAA4B;MAAE,CAC9C,CAAC,EACFd,IAAA,CAACN,KAAK;QACJc,KAAK,EAAEC,MAAM,CAACO,cAAe;QAC7BH,MAAM,EAAEC,OAAO,2BAA2B;MAAE,CAC7C,CAAC;IAAA,CACE;EAAC,CACK,CAAC;AAEnB,CAAC;AAED,IAAML,MAAM,GAAGlB,UAAU,CAAC0B,MAAM,CAAC;EAC/BP,MAAM,EAAE;IACNQ,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE,OAAO;IAGxBC,SAAS,EAAExB,aAAa,CAAC,EAAE,CAAC;IAC5ByB,iBAAiB,EAAE3B,eAAe,CAAC,EAAE,CAAC;IACtC4B,eAAe,EAAE1B,aAAa,CAAC,EAAE;EACnC,CAAC;EACDc,IAAI,EAAE;IACJa,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE;EACT,CAAC;EACDZ,QAAQ,EAAE;IACRU,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE;EACV,CAAC;EACDV,cAAc,EAAE;IACdU,MAAM,EAAE,EAAE;IACVD,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAetB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}