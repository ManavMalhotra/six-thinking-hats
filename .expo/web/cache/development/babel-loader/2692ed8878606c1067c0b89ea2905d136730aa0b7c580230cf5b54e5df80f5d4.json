{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { horizontalScale, verticalScale } from \"../metric\";\nimport { useUserStore } from \"../store\";\nimport { Image } from \"expo-image\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Navbar = function Navbar(_ref) {\n  var navigation = _ref.navigation;\n  var _useUserStore = useUserStore(),\n    userName = _useUserStore.userName,\n    userOrganisation = _useUserStore.userOrganisation,\n    userRole = _useUserStore.userRole,\n    userProfilePic = _useUserStore.userProfilePic,\n    setUserName = _useUserStore.setUserName,\n    setUserOrganisation = _useUserStore.setUserOrganisation,\n    setUserRole = _useUserStore.setUserRole,\n    setUserProfilePic = _useUserStore.setUserProfilePic;\n  useEffect(function () {\n    var fetchProfileData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var storedData = yield AsyncStorage.getItem(\"profileData\");\n          if (storedData) {\n            var parsedData = JSON.parse(storedData);\n            setUserName(parsedData.userName);\n            setUserOrganisation(parsedData.userOrganisation);\n            setUserRole(parsedData.userRole);\n            setUserProfilePic(parsedData.userProfilePic);\n            navigation.navigate(\"SessionScreen\");\n          }\n        } catch (error) {\n          console.error(\"Error fetching profile data:\", error);\n        }\n      });\n      return function fetchProfileData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchProfileData();\n  }, []);\n  var handleBackPress = function handleBackPress() {\n    navigation.goBack();\n  };\n  var tinkLogoSource = require(\"../assets/tink-logo-1.png\");\n  var defaultProfilePicSource = require(\"../assets/ellipse-15.svg\");\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      style: styles.navbar,\n      children: [_jsx(TouchableOpacity, {\n        onPress: handleBackPress,\n        children: _jsx(Image, {\n          style: styles.icon,\n          source: require(\"../assets/menu.svg\")\n        })\n      }), _jsx(Image, {\n        style: styles.tinkLogo,\n        source: tinkLogoSource\n      }), _jsx(Image, {\n        style: styles.icon,\n        source: userProfilePic ? {\n          uri: userProfilePic\n        } : defaultProfilePicSource\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  navbar: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    marginTop: verticalScale(20),\n    paddingHorizontal: horizontalScale(20),\n    paddingVertical: verticalScale(20)\n  },\n  icon: {\n    width: 50,\n    height: 50\n  },\n  tinkLogo: {\n    width: 106,\n    height: 32\n  }\n});\nexport default Navbar;","map":{"version":3,"names":["React","useEffect","View","StyleSheet","TouchableOpacity","SafeAreaView","useNavigation","horizontalScale","verticalScale","useUserStore","Image","AsyncStorage","jsx","_jsx","jsxs","_jsxs","Navbar","_ref","navigation","_useUserStore","userName","userOrganisation","userRole","userProfilePic","setUserName","setUserOrganisation","setUserRole","setUserProfilePic","fetchProfileData","_ref2","_asyncToGenerator","storedData","getItem","parsedData","JSON","parse","navigate","error","console","apply","arguments","handleBackPress","goBack","tinkLogoSource","require","defaultProfilePicSource","children","style","styles","navbar","onPress","icon","source","tinkLogo","uri","create","flexDirection","justifyContent","alignItems","backgroundColor","marginTop","paddingHorizontal","paddingVertical","width","height"],"sources":["C:/Users/manav/projects/ironman_client/components/Navbar.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { View, StyleSheet, TouchableOpacity, SafeAreaView } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { horizontalScale, verticalScale } from \"../metric\";\r\nimport { useUserStore } from \"../store\";\r\nimport { Image } from \"expo-image\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst Navbar = ({ navigation }) => {\r\n  const {\r\n    userName,\r\n    userOrganisation,\r\n    userRole,\r\n    userProfilePic,\r\n    setUserName,\r\n    setUserOrganisation,\r\n    setUserRole,\r\n    setUserProfilePic,\r\n  } = useUserStore();\r\n\r\n  useEffect(() => {\r\n    const fetchProfileData = async () => {\r\n      try {\r\n        // Fetch profile data from local storage\r\n        const storedData = await AsyncStorage.getItem(\"profileData\");\r\n        if (storedData) {\r\n          const parsedData = JSON.parse(storedData);\r\n          setUserName(parsedData.userName);\r\n          setUserOrganisation(parsedData.userOrganisation);\r\n          setUserRole(parsedData.userRole);\r\n          setUserProfilePic(parsedData.userProfilePic);\r\n          navigation.navigate(\"SessionScreen\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching profile data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchProfileData();\r\n  }, []);\r\n\r\n  const handleBackPress = () => {\r\n    navigation.goBack();\r\n  };\r\n\r\n  const tinkLogoSource = require(\"../assets/tink-logo-1.png\");\r\n  const defaultProfilePicSource = require(\"../assets/ellipse-15.svg\");\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      <View style={styles.navbar}>\r\n        <TouchableOpacity onPress={handleBackPress}>\r\n          <Image style={styles.icon} source={require(\"../assets/menu.svg\")} />\r\n        </TouchableOpacity>\r\n\r\n        <Image style={styles.tinkLogo} source={tinkLogoSource} />\r\n\r\n        <Image\r\n          style={styles.icon}\r\n          source={userProfilePic ? { uri: userProfilePic } : defaultProfilePicSource}\r\n        />\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  navbar: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n    marginTop: verticalScale(20),\r\n    paddingHorizontal: horizontalScale(20),\r\n    paddingVertical: verticalScale(20),\r\n  },\r\n  icon: {\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  tinkLogo: {\r\n    width: 106,\r\n    height: 32,\r\n  },\r\n});\r\n\r\nexport default Navbar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}