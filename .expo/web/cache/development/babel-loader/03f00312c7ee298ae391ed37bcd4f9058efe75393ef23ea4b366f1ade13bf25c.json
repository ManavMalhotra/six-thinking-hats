{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar Stack = createNativeStackNavigator();\nimport * as React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { useFonts } from \"expo-font\";\nimport EmptyScreen from \"./components/SessionScreen\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar App = function App() {\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    hideSplashScreen = _React$useState2[0],\n    setHideSplashScreen = _React$useState2[1];\n  var _useFonts = useFonts({\n      \"Rubik-Regular\": require(\"./assets/fonts/Rubik-Regular.ttf\"),\n      \"Manrope-Medium\": require(\"./assets/fonts/Manrope-Medium.ttf\"),\n      \"Manrope-SemiBold\": require(\"./assets/fonts/Manrope-SemiBold.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 2),\n    fontsLoaded = _useFonts2[0],\n    error = _useFonts2[1];\n  if (!fontsLoaded && !error) {\n    return null;\n  }\n  return _jsx(_Fragment, {\n    children: _jsx(NavigationContainer, {\n      children: hideSplashScreen ? _jsx(Stack.Navigator, {\n        screenOptions: {\n          headerShown: false\n        },\n        children: _jsx(Stack.Screen, {\n          name: \"EmptyScreen\",\n          component: EmptyScreen,\n          options: {\n            headerShown: false\n          }\n        })\n      }) : null\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["Stack","createNativeStackNavigator","React","NavigationContainer","useFonts","EmptyScreen","View","Text","Pressable","TouchableOpacity","jsx","_jsx","Fragment","_Fragment","App","_React$useState","useState","_React$useState2","_slicedToArray","hideSplashScreen","setHideSplashScreen","_useFonts","require","_useFonts2","fontsLoaded","error","children","Navigator","screenOptions","headerShown","Screen","name","component","options"],"sources":["C:/Users/manav/projects/ironman_client/App.js"],"sourcesContent":["const Stack = createNativeStackNavigator();\nimport * as React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { useFonts } from \"expo-font\";\nimport EmptyScreen from \"./components/SessionScreen\";\n\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { View, Text, Pressable, TouchableOpacity } from \"react-native\";\n\nconst App = () => {\n  const [hideSplashScreen, setHideSplashScreen] = React.useState(true);\n  const [fontsLoaded, error] = useFonts({\n    \"Rubik-Regular\": require(\"./assets/fonts/Rubik-Regular.ttf\"),\n    \"Manrope-Medium\": require(\"./assets/fonts/Manrope-Medium.ttf\"),\n    \"Manrope-SemiBold\": require(\"./assets/fonts/Manrope-SemiBold.ttf\"),\n  });\n\n  if (!fontsLoaded && !error) {\n    return null;\n  }\n\n  return (\n    <>\n      <NavigationContainer>\n        {hideSplashScreen ? (\n          <Stack.Navigator screenOptions={{ headerShown: false }}>\n            <Stack.Screen\n              name=\"EmptyScreen\"\n              component={EmptyScreen}\n              options={{ headerShown: false }}\n            />\n          </Stack.Navigator>\n        ) : null}\n      </NavigationContainer>\n    </>\n  );\n};\nexport default App;\n"],"mappings":";AAAA,IAAMA,KAAK,GAAGC,0BAA0B,CAAC,CAAC;AAC1C,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,QAAQ,QAAQ,WAAW;AACpC,OAAOC,WAAW;AAElB,SAASJ,0BAA0B,QAAQ,gCAAgC;AAAC,OAAAK,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG5E,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,IAAAC,eAAA,GAAgDb,KAAK,CAACc,QAAQ,CAAC,IAAI,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA7DI,gBAAgB,GAAAF,gBAAA;IAAEG,mBAAmB,GAAAH,gBAAA;EAC5C,IAAAI,SAAA,GAA6BjB,QAAQ,CAAC;MACpC,eAAe,EAAEkB,OAAO,mCAAmC,CAAC;MAC5D,gBAAgB,EAAEA,OAAO,oCAAoC,CAAC;MAC9D,kBAAkB,EAAEA,OAAO,sCAAsC;IACnE,CAAC,CAAC;IAAAC,UAAA,GAAAL,cAAA,CAAAG,SAAA;IAJKG,WAAW,GAAAD,UAAA;IAAEE,KAAK,GAAAF,UAAA;EAMzB,IAAI,CAACC,WAAW,IAAI,CAACC,KAAK,EAAE;IAC1B,OAAO,IAAI;EACb;EAEA,OACEd,IAAA,CAAAE,SAAA;IAAAa,QAAA,EACEf,IAAA,CAACR,mBAAmB;MAAAuB,QAAA,EACjBP,gBAAgB,GACfR,IAAA,CAACX,KAAK,CAAC2B,SAAS;QAACC,aAAa,EAAE;UAAEC,WAAW,EAAE;QAAM,CAAE;QAAAH,QAAA,EACrDf,IAAA,CAACX,KAAK,CAAC8B,MAAM;UACXC,IAAI,EAAC,aAAa;UAClBC,SAAS,EAAE3B,WAAY;UACvB4B,OAAO,EAAE;YAAEJ,WAAW,EAAE;UAAM;QAAE,CACjC;MAAC,CACa,CAAC,GAChB;IAAI,CACW;EAAC,CACtB,CAAC;AAEP,CAAC;AACD,eAAef,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}