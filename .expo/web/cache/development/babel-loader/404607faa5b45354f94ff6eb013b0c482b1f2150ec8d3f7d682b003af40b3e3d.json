{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nvar socketSlice = createSlice({\n  name: \"socket\",\n  initialState: {\n    socket: null,\n    userId: null,\n    isAdmin: null,\n    hatColor: null,\n    roomId: null,\n    mySession: []\n  },\n  reducers: {\n    setSocket: function setSocket(state, action) {\n      state.socket = action.payload;\n    },\n    setUserId: function setUserId(state, action) {\n      state.userId = action.payload;\n    },\n    setIsAdmin: function setIsAdmin(state, action) {\n      state.isAdmin = action.payload;\n    },\n    setHatColor: function setHatColor(state, action) {\n      state.hatColor = action.payload;\n    },\n    setRoomId: function setRoomId(state, action) {\n      state.roomId = action.payload;\n    },\n    setMySession: function setMySession(state, action) {\n      state.mySession = action.payload;\n    }\n  }\n});\nvar _socketSlice$actions = socketSlice.actions,\n  setSocket = _socketSlice$actions.setSocket,\n  setUserId = _socketSlice$actions.setUserId,\n  setIsAdmin = _socketSlice$actions.setIsAdmin,\n  setHatColor = _socketSlice$actions.setHatColor,\n  setRoomId = _socketSlice$actions.setRoomId,\n  setMySession = _socketSlice$actions.setMySession;\nexport { setSocket, setUserId, setIsAdmin, setHatColor, setRoomId, setMySession };\nexport var selectSocket = function selectSocket(state) {\n  return state.socket;\n};\nexport var selectUserId = function selectUserId(state) {\n  return state.userId;\n};\nexport var selectIsAdmin = function selectIsAdmin(state) {\n  return state.isAdmin;\n};\nexport var selectHatColor = function selectHatColor(state) {\n  return state.hatColor;\n};\nexport var selectRoomId = function selectRoomId(state) {\n  return state.roomId;\n};\nexport var selectMySession = function selectMySession(state) {\n  return state.mySession;\n};\nvar store = configureStore({\n  reducer: {\n    socket: socketSlice.reducer\n  }\n});\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","socketSlice","name","initialState","socket","userId","isAdmin","hatColor","roomId","mySession","reducers","setSocket","state","action","payload","setUserId","setIsAdmin","setHatColor","setRoomId","setMySession","_socketSlice$actions","actions","selectSocket","selectUserId","selectIsAdmin","selectHatColor","selectRoomId","selectMySession","store","reducer"],"sources":["C:/Users/manav/projects/ironman_client/store.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst socketSlice = createSlice({\r\n  name: \"socket\",\r\n  initialState: {\r\n    socket: null,\r\n    userId: null,\r\n    isAdmin: null,\r\n    hatColor: null,\r\n    roomId: null,\r\n    mySession: [],\r\n  },\r\n  reducers: {\r\n    setSocket: (state, action) => {\r\n      state.socket = action.payload;\r\n    },\r\n    setUserId: (state, action) => {\r\n      state.userId = action.payload;\r\n    },\r\n    setIsAdmin: (state, action) => {\r\n      state.isAdmin = action.payload;\r\n    },\r\n    setHatColor: (state, action) => {\r\n      state.hatColor = action.payload;\r\n    },\r\n    setRoomId: (state, action) => {\r\n      state.roomId = action.payload;\r\n    },\r\n    setMySession: (state, action) => {\r\n      state.mySession = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setSocket,\r\n  setUserId,\r\n  setIsAdmin,\r\n  setHatColor,\r\n  setRoomId,\r\n  setMySession,\r\n} = socketSlice.actions;\r\n\r\nexport const selectSocket = (state) => state.socket;\r\nexport const selectUserId = (state) => state.userId;\r\nexport const selectIsAdmin = (state) => state.isAdmin;\r\nexport const selectHatColor = (state) => state.hatColor;\r\nexport const selectRoomId = (state) => state.roomId;\r\nexport const selectMySession = (state) => state.mySession;\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    socket: socketSlice.reducer,\r\n  },\r\n});\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,IAAMC,WAAW,GAAGF,WAAW,CAAC;EAC9BG,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,MAAM,EAAE,IAAI;IACZC,MAAM,EAAE,IAAI;IACZC,OAAO,EAAE,IAAI;IACbC,QAAQ,EAAE,IAAI;IACdC,MAAM,EAAE,IAAI;IACZC,SAAS,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE;IACRC,SAAS,EAAE,SAAAA,UAACC,KAAK,EAAEC,MAAM,EAAK;MAC5BD,KAAK,CAACR,MAAM,GAAGS,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDC,SAAS,EAAE,SAAAA,UAACH,KAAK,EAAEC,MAAM,EAAK;MAC5BD,KAAK,CAACP,MAAM,GAAGQ,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDE,UAAU,EAAE,SAAAA,WAACJ,KAAK,EAAEC,MAAM,EAAK;MAC7BD,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACC,OAAO;IAChC,CAAC;IACDG,WAAW,EAAE,SAAAA,YAACL,KAAK,EAAEC,MAAM,EAAK;MAC9BD,KAAK,CAACL,QAAQ,GAAGM,MAAM,CAACC,OAAO;IACjC,CAAC;IACDI,SAAS,EAAE,SAAAA,UAACN,KAAK,EAAEC,MAAM,EAAK;MAC5BD,KAAK,CAACJ,MAAM,GAAGK,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDK,YAAY,EAAE,SAAAA,aAACP,KAAK,EAAEC,MAAM,EAAK;MAC/BD,KAAK,CAACH,SAAS,GAAGI,MAAM,CAACC,OAAO;IAClC;EACF;AACF,CAAC,CAAC;AAEK,IAAAM,oBAAA,GAOHnB,WAAW,CAACoB,OAAO;EANrBV,SAAS,GAAAS,oBAAA,CAATT,SAAS;EACTI,SAAS,GAAAK,oBAAA,CAATL,SAAS;EACTC,UAAU,GAAAI,oBAAA,CAAVJ,UAAU;EACVC,WAAW,GAAAG,oBAAA,CAAXH,WAAW;EACXC,SAAS,GAAAE,oBAAA,CAATF,SAAS;EACTC,YAAY,GAAAC,oBAAA,CAAZD,YAAY;AACU,SAAAR,SAAA,EAAAI,SAAA,EAAAC,UAAA,EAAAC,WAAA,EAAAC,SAAA,EAAAC,YAAA;AAExB,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAYA,CAAIV,KAAK;EAAA,OAAKA,KAAK,CAACR,MAAM;AAAA;AACnD,OAAO,IAAMmB,YAAY,GAAG,SAAfA,YAAYA,CAAIX,KAAK;EAAA,OAAKA,KAAK,CAACP,MAAM;AAAA;AACnD,OAAO,IAAMmB,aAAa,GAAG,SAAhBA,aAAaA,CAAIZ,KAAK;EAAA,OAAKA,KAAK,CAACN,OAAO;AAAA;AACrD,OAAO,IAAMmB,cAAc,GAAG,SAAjBA,cAAcA,CAAIb,KAAK;EAAA,OAAKA,KAAK,CAACL,QAAQ;AAAA;AACvD,OAAO,IAAMmB,YAAY,GAAG,SAAfA,YAAYA,CAAId,KAAK;EAAA,OAAKA,KAAK,CAACJ,MAAM;AAAA;AACnD,OAAO,IAAMmB,eAAe,GAAG,SAAlBA,eAAeA,CAAIf,KAAK;EAAA,OAAKA,KAAK,CAACH,SAAS;AAAA;AAEzD,IAAMmB,KAAK,GAAG5B,cAAc,CAAC;EAC3B6B,OAAO,EAAE;IACPzB,MAAM,EAAEH,WAAW,CAAC4B;EACtB;AACF,CAAC,CAAC;AAEF,eAAeD,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}