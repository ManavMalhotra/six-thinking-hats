{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSocketStore } from \"../store\";\nimport socketSingleton from \"../SocketManager\";\nimport HatColor from \"./HatColor\";\nimport TimerComponent from \"./TimerComponent\";\nimport UserCard from \"./UserCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _require = require(\"../store\"),\n  useUserStore = _require.useUserStore;\nvar ParticipantsScreen = function ParticipantsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var userId = useSocketStore(function (state) {\n    return state.userId;\n  });\n  var isAdmin = useSocketStore(function (state) {\n    return state.isAdmin;\n  });\n  var hatColor = useSocketStore(function (state) {\n    return state.hatColor;\n  });\n  var setHatColor = useSocketStore(function (state) {\n    return state.setHatColor;\n  });\n  var roomId = useSocketStore(function (state) {\n    return state.roomId;\n  });\n  var mySession = useSocketStore(function (state) {\n    return state.mySession;\n  });\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentUser = _useState2[0],\n    setCurrentUser = _useState2[1];\n  var _useUserStore = useUserStore(),\n    userName = _useUserStore.userName,\n    userOrganisation = _useUserStore.userOrganisation,\n    userDesignation = _useUserStore.userDesignation,\n    userProfilePic = _useUserStore.userProfilePic;\n  var _useState3 = useState({\n      id: userId,\n      name: userName,\n      designation: userDesignation,\n      profilePic: userProfilePic,\n      hatColor: hatColor\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userInfo = _useState4[0],\n    setUserInfo = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    participants = _useState6[0],\n    setParticipants = _useState6[1];\n  console.log(\"ParticipantsScreen\", participants);\n  var socket = socketSingleton.getSocket();\n  useEffect(function () {\n    console.log(\"admin\", isAdmin);\n    socket.on(\"roomData\", function (_ref2) {\n      var users = _ref2.users;\n      console.log(\"USERS\", users);\n      setParticipants(users);\n      var currentUser = users.find(function (user) {\n        return user.id === id;\n      });\n      if (currentUser) {\n        console.log(\"currentUser\", currentUser);\n      }\n    });\n    socket.on(\"roomJoined\", function (users) {\n      setParticipants(users);\n    });\n  }, []);\n  return _jsx(SafeAreaView, {\n    children: isAdmin ? _jsxs(View, {\n      children: [_jsx(TimerComponent, {\n        duration: \"10\"\n      }), _jsx(Text, {\n        children: \"Participants in the room:\"\n      }), _jsxs(Text, {\n        children: [\"Admin ID: \", userId]\n      }), _jsxs(Text, {\n        children: [\"Room ID: \", roomId]\n      }), participants.map(function (user) {\n        return _jsxs(View, {\n          children: [_jsx(UserCard, {\n            user: userInfo\n          }, user.id), _jsxs(Text, {\n            style: styles.participant,\n            children: [\" \", user.id, \": \", user.hatRole]\n          })]\n        }, user.id);\n      })]\n    }) : _jsxs(View, {\n      style: styles.participant,\n      children: [_jsxs(Text, {\n        children: [\"User ID: \", userId]\n      }), _jsxs(Text, {\n        children: [\"Room ID: \", roomId]\n      }), _jsx(HatColor, {\n        hatColor: hatColor\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  participant: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  }\n});\nexport default ParticipantsScreen;","map":{"version":3,"names":["React","useState","useEffect","Text","View","SafeAreaView","StyleSheet","useSocketStore","socketSingleton","HatColor","TimerComponent","UserCard","jsx","_jsx","jsxs","_jsxs","_require","require","useUserStore","ParticipantsScreen","_ref","navigation","userId","state","isAdmin","hatColor","setHatColor","roomId","mySession","_useState","_useState2","_slicedToArray","currentUser","setCurrentUser","_useUserStore","userName","userOrganisation","userDesignation","userProfilePic","_useState3","id","name","designation","profilePic","_useState4","userInfo","setUserInfo","_useState5","_useState6","participants","setParticipants","console","log","socket","getSocket","on","_ref2","users","find","user","children","duration","map","style","styles","participant","hatRole","create","fontSize","fontWeight"],"sources":["C:/Users/manav/projects/ironman_client/components/ParticipantsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Text, View, SafeAreaView, StyleSheet } from \"react-native\";\r\nimport { useSocketStore } from \"../store\";\r\nimport socketSingleton from \"../SocketManager\";\r\nimport HatColor from \"./HatColor\";\r\nimport TimerComponent from \"./TimerComponent\";\r\nimport UserCard from \"./UserCard\";\r\nconst { useUserStore } = require(\"../store\");\r\n\r\nconst ParticipantsScreen = ({ navigation }) => {\r\n  const userId = useSocketStore((state) => state.userId);\r\n  const isAdmin = useSocketStore((state) => state.isAdmin);\r\n  const hatColor = useSocketStore((state) => state.hatColor);\r\n  const setHatColor = useSocketStore((state) => state.setHatColor);\r\n  const roomId = useSocketStore((state) => state.roomId);\r\n  const mySession = useSocketStore((state) => state.mySession);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  const { userName, userOrganisation, userDesignation, userProfilePic } =\r\n    useUserStore();\r\n\r\n  const [userInfo, setUserInfo] = useState({\r\n    id: userId,\r\n    name: userName,\r\n    designation: userDesignation,\r\n    profilePic: userProfilePic,\r\n    hatColor: hatColor,\r\n  });\r\n\r\n  const [participants, setParticipants] = useState([]);\r\n  console.log(\"ParticipantsScreen\", participants);\r\n\r\n  const socket = socketSingleton.getSocket();\r\n\r\n  useEffect(() => {\r\n    console.log(\"admin\", isAdmin);\r\n\r\n    socket.on(\"roomData\", ({ users }) => {\r\n      console.log(\"USERS\", users);\r\n\r\n      setParticipants(users);\r\n\r\n      const currentUser = users.find((user) => user.id === id);\r\n\r\n      if (currentUser) {\r\n        console.log(\"currentUser\", currentUser);\r\n      }\r\n    });\r\n\r\n    socket.on(\"roomJoined\", (users) => {\r\n      setParticipants(users);\r\n    });\r\n  }, []);\r\n\r\n  // const userInfo = {\r\n  //   name: \"Anonymous\",\r\n  //   designation: \"Developer\",\r\n  //   profilePic: require(\"../assets/userProfilePic.png\"),\r\n  // };\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      {isAdmin ? (\r\n        <View>\r\n          <TimerComponent duration=\"10\" />\r\n          <Text>Participants in the room:</Text>\r\n          <Text>Admin ID: {userId}</Text>\r\n          <Text>Room ID: {roomId}</Text>\r\n          {\r\n            // rendeer the list of participants\r\n            participants.map((user) => {\r\n              return (\r\n                <View key={user.id}>\r\n                  <UserCard key={user.id} user={userInfo} />\r\n                  <Text style={styles.participant}> {user.id}: {user.hatRole}</Text>\r\n                </View>\r\n              );\r\n            })\r\n          }\r\n        </View>\r\n      ) : (\r\n        <View style={styles.participant}>\r\n          <Text>User ID: {userId}</Text>\r\n          <Text>Room ID: {roomId}</Text>\r\n\r\n          <HatColor hatColor={hatColor} />\r\n        </View>\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  participant: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nexport default ParticipantsScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}