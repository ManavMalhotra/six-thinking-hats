{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useState, useEffect } from \"react\";\nimport socketSingleton from \"../../SocketManager\";\nimport { useSocketStore, useUserStore } from \"../../store\";\nimport Text from \"react-native-paper/lib/module/components/Typography/Text\";\nimport TextInput from \"react-native-paper/lib/module/components/TextInput/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar JoinSession = function JoinSession(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    roomId = _useState4[0],\n    setroomId = _useState4[1];\n  var _useSocketStore = useSocketStore(),\n    socket = _useSocketStore.socket,\n    setSocket = _useSocketStore.setSocket,\n    userId = _useSocketStore.userId,\n    setUserId = _useSocketStore.setUserId,\n    setHatColor = _useSocketStore.setHatColor;\n  var _useUserStore = useUserStore(),\n    userName = _useUserStore.userName,\n    userRole = _useUserStore.userRole;\n  useEffect(function () {\n    console.log(\"_______JoinSession.js_______\");\n    console.log(\"socket initialize: \");\n    socketConnection();\n  }, []);\n  var socketConnection = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var initializedSocket = yield socketSingleton.initSocket();\n      setSocket(initializedSocket);\n      initializedSocket.on(\"connect\", function () {\n        var id = initializedSocket.id;\n        setUserId(id);\n        setLoading(false);\n      });\n    });\n    return function socketConnection() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var joinRoom = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      setLoading(true);\n      try {\n        var data = {\n          roomId: roomId,\n          userId: userId,\n          userName: userName,\n          userRole: userRole\n        };\n        yield socket.emit(\"joinRoom\", data);\n        yield socket.on(\"userInfo\", function (data) {\n          setHatColor(data.hatRole);\n        });\n        yield socket.on(\"roomJoined\", function (data) {\n          console.log(\"roomJoined event received: \", data);\n          setroomId(roomId);\n          navigation.navigate(\"Participants\");\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    });\n    return function joinRoom() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(SafeAreaView, {\n    children: [_jsxs(View, {\n      children: [_jsx(Text, {\n        variant: \"\",\n        children: \"Join Session\"\n      }), loading ? _jsx(Text, {\n        children: \"Loading...\"\n      }) : _jsx(TextInput, {\n        value: roomId,\n        type: \"numeric\",\n        label: \"Enter Room Code\",\n        onChangeText: function onChangeText(text) {\n          setroomId(text);\n        }\n      })]\n    }), _jsx(Button, {\n      title: \"Join\",\n      onPress: joinRoom\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  codeTextBox: {\n    borderWidth: 1,\n    borderColor: \"black\",\n    borderRadius: 5,\n    padding: 5,\n    width: 200\n  }\n});\nexport default JoinSession;","map":{"version":3,"names":["useState","useEffect","socketSingleton","useSocketStore","useUserStore","Text","TextInput","jsx","_jsx","jsxs","_jsxs","JoinSession","_ref","navigation","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","roomId","setroomId","_useSocketStore","socket","setSocket","userId","setUserId","setHatColor","_useUserStore","userName","userRole","console","log","socketConnection","_ref2","_asyncToGenerator","initializedSocket","initSocket","on","id","apply","arguments","joinRoom","_ref3","data","emit","hatRole","navigate","err","SafeAreaView","children","View","variant","value","type","label","onChangeText","text","Button","title","onPress","styles","StyleSheet","create","codeTextBox","borderWidth","borderColor","borderRadius","padding","width"],"sources":["C:/Users/manav/projects/six-thinking-hats/components/screens/JoinSession.tsx"],"sourcesContent":["import {\r\n  View,\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  Button,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport socketSingleton from \"../../SocketManager\";\r\nimport { useSocketStore, useUserStore } from \"../../store\";\r\n\r\nimport { Text, TextInput } from \"react-native-paper\";\r\n\r\nconst JoinSession = ({ navigation }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [roomId, setroomId] = useState(\"\");\r\n  const { socket, setSocket, userId, setUserId, setHatColor } =\r\n    useSocketStore();\r\n  const { userName, userRole } = useUserStore();\r\n\r\n  useEffect(() => {\r\n    console.log(\"_______JoinSession.js_______\");\r\n    console.log(\"socket initialize: \");\r\n    socketConnection();\r\n  }, []);\r\n\r\n  const socketConnection = async () => {\r\n    const initializedSocket = await socketSingleton.initSocket();\r\n    setSocket(initializedSocket);\r\n    initializedSocket.on(\"connect\", () => {\r\n      let id = initializedSocket.id;\r\n      setUserId(id);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  const joinRoom = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let data = {\r\n        roomId,\r\n        userId,\r\n        userName,\r\n        userRole,\r\n      };\r\n\r\n      await socket.emit(\"joinRoom\", data);\r\n\r\n      await socket.on(\"userInfo\", (data) => {\r\n        setHatColor(data.hatRole);\r\n      });\r\n\r\n      await socket.on(\"roomJoined\", (data) => {\r\n        console.log(\"roomJoined event received: \", data);\r\n        setroomId(roomId);\r\n        navigation.navigate(\"Participants\");\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      <View>\r\n        <Text\r\n        variant=\"\"\r\n        >Join Session</Text>\r\n        {loading ? (\r\n          <Text>Loading...</Text>\r\n        ) : (\r\n          <TextInput\r\n            value={roomId}\r\n            type=\"numeric\"\r\n            label=\"Enter Room Code\"\r\n            onChangeText={(text) => {\r\n              setroomId(text);\r\n            }}\r\n          />\r\n        )}\r\n      </View>\r\n\r\n      <Button title=\"Join\" onPress={joinRoom} />\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  codeTextBox: {\r\n    borderWidth: 1,\r\n    borderColor: \"black\",\r\n    borderRadius: 5,\r\n    padding: 5,\r\n    width: 200,\r\n  },\r\n});\r\n\r\nexport default JoinSession;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}