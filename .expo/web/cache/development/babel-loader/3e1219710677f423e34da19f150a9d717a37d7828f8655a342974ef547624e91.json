{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Image } from \"expo-image\";\nimport { Color, FontFamily, FontSize, Padding, Border } from \"../GlobalStyles\";\nimport { horizontalScale, moderateScale, verticalScale } from \"../metric\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TimerComponent = function TimerComponent(_ref) {\n  var duration = _ref.duration;\n  var initialTime = duration * 60;\n  var _useState = useState(initialTime),\n    _useState2 = _slicedToArray(_useState, 2),\n    time = _useState2[0],\n    setTime = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    running = _useState4[0],\n    setRunning = _useState4[1];\n  var intervalRef = useRef(null);\n  var startTimer = function startTimer() {\n    if (!running) {\n      intervalRef.current = setInterval(function () {\n        setTime(function (prevTime) {\n          if (prevTime > 0) {\n            return prevTime - 1;\n          } else {\n            clearInterval(intervalRef.current);\n            setRunning(false);\n            return 0;\n          }\n        });\n      }, 1000);\n      setRunning(true);\n    }\n  };\n  var stopTimer = function stopTimer() {\n    clearInterval(intervalRef.current);\n    setRunning(false);\n  };\n  var resetTimer = function resetTimer() {\n    clearInterval(intervalRef.current);\n    setTime(initialTime);\n    setRunning(false);\n  };\n  var formatTime = function formatTime(seconds) {\n    var minutes = Math.floor(seconds / 60);\n    var remainingSeconds = seconds % 60;\n    return \" \" + minutes + \":\" + (remainingSeconds < 10 ? \"0\" : \"\") + remainingSeconds + \" \";\n  };\n  return _jsxs(View, {\n    style: styles.timerContainer,\n    children: [_jsxs(View, {\n      style: styles.timeText,\n      children: [_jsx(Text, {\n        style: [styles.timerText, styles.opaque],\n        children: \"Session Ends in\"\n      }), _jsx(Text, {\n        style: [styles.timerText, {\n          color: \"blue\"\n        }],\n        children: formatTime(time)\n      }), _jsx(Text, {\n        style: [styles.timerText, styles.opaque],\n        children: \"sec\"\n      })]\n    }), _jsx(TouchableOpacity, {\n      onPress: running ? stopTimer : startTimer,\n      children: _jsx(Image, {\n        style: styles.icon,\n        source: require(\"../assets/play.svg\")\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: resetTimer,\n      children: _jsx(Image, {\n        style: styles.resetIcon,\n        source: require(\"../assets/reset.svg\")\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  timerContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    borderWidth: 1,\n    borderRadius: 25,\n    borderColor: \"#000\",\n    padding: 10,\n    fontFamily: FontFamily.manropeSemiBold,\n    marginHorizontal: horizontalScale(20),\n    marginVertical: verticalScale(20)\n  },\n  opaque: {\n    opacity: 0.5\n  },\n  timeText: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  timerText: {\n    fontSize: FontSize.size_base,\n    fontFamily: FontFamily.manropeSemiBold\n  },\n  icon: {\n    width: 50,\n    height: 50,\n    marginHorizontal: horizontalScale(3)\n  },\n  resetIcon: {\n    width: 25,\n    height: 25\n  }\n});\nexport default TimerComponent;","map":{"version":3,"names":["React","useState","useRef","View","Text","TouchableOpacity","StyleSheet","Image","Color","FontFamily","FontSize","Padding","Border","horizontalScale","moderateScale","verticalScale","jsx","_jsx","jsxs","_jsxs","TimerComponent","_ref","duration","initialTime","_useState","_useState2","_slicedToArray","time","setTime","_useState3","_useState4","running","setRunning","intervalRef","startTimer","current","setInterval","prevTime","clearInterval","stopTimer","resetTimer","formatTime","seconds","minutes","Math","floor","remainingSeconds","style","styles","timerContainer","children","timeText","timerText","opaque","color","onPress","icon","source","require","resetIcon","create","alignItems","justifyContent","flexDirection","borderWidth","borderRadius","borderColor","padding","fontFamily","manropeSemiBold","marginHorizontal","marginVertical","opacity","fontSize","size_base","width","height"],"sources":["C:/Users/manav/projects/ironman_client/components/TimerComponent.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { View, Text, TouchableOpacity, StyleSheet } from \"react-native\";\r\nimport { Image } from \"expo-image\";\r\nimport { Color, FontFamily, FontSize, Padding, Border } from \"../GlobalStyles\";\r\nimport { horizontalScale, moderateScale, verticalScale } from \"../metric\";\r\n\r\nconst TimerComponent = ({ duration }) => {\r\n  const initialTime = duration * 60; // 10 minutes in seconds\r\n  const [time, setTime] = useState(initialTime);\r\n  const [running, setRunning] = useState(false);\r\n  const intervalRef = useRef(null);\r\n\r\n  const startTimer = () => {\r\n    if (!running) {\r\n      intervalRef.current = setInterval(() => {\r\n        setTime((prevTime) => {\r\n          if (prevTime > 0) {\r\n            return prevTime - 1;\r\n          } else {\r\n            clearInterval(intervalRef.current);\r\n            setRunning(false);\r\n            return 0;\r\n          }\r\n        });\r\n      }, 1000);\r\n      setRunning(true);\r\n    }\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    clearInterval(intervalRef.current);\r\n    setRunning(false);\r\n  };\r\n\r\n  const resetTimer = () => {\r\n    clearInterval(intervalRef.current);\r\n    setTime(initialTime);\r\n    setRunning(false);\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return ` ${minutes}:${\r\n      remainingSeconds < 10 ? \"0\" : \"\"\r\n    }${remainingSeconds} `;\r\n  };\r\n\r\n  return (\r\n    <View style={styles.timerContainer}>\r\n      <View style={styles.timeText}>\r\n        <Text style={[styles.timerText, styles.opaque]}>Session Ends in</Text>\r\n        <Text style={[styles.timerText, {color: \"blue\"}] }>{formatTime(time)}</Text>\r\n        <Text style={[styles.timerText, styles.opaque]}>sec</Text>\r\n      </View>\r\n\r\n      <TouchableOpacity onPress={running ? stopTimer : startTimer}>\r\n        <Image style={styles.icon} source={require(\"../assets/play.svg\")} />\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity onPress={resetTimer}>\r\n        <Image\r\n          style={styles.resetIcon}\r\n          source={require(\"../assets/reset.svg\")}\r\n        />\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  timerContainer: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"row\",\r\n    borderWidth: 1,\r\n    borderRadius: 25,\r\n    borderColor: \"#000\",\r\n    padding: 10,\r\n    fontFamily: FontFamily.manropeSemiBold,\r\n    marginHorizontal: horizontalScale(20),\r\n    marginVertical: verticalScale(20),\r\n  },\r\n  opaque: {\r\n    opacity: 0.5,\r\n  },\r\n  timeText: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  timerText: {\r\n    fontSize: FontSize.size_base,\r\n    fontFamily: FontFamily.manropeSemiBold,\r\n  },\r\n  icon: {\r\n    width: 50,\r\n    height: 50,\r\n    marginHorizontal: horizontalScale(3),\r\n  },\r\n  resetIcon: {\r\n    width: 25,\r\n    height: 25,\r\n  },\r\n});\r\n\r\nexport default TimerComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}