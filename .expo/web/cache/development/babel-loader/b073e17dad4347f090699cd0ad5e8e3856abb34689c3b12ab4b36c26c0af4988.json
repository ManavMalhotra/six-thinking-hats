{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSocketStore } from \"../store\";\nimport socketSingleton from \"../SocketManager\";\nimport HatColor from \"./HatColor\";\nimport TimerComponent from \"./TimerComponent\";\nimport UserCard from \"./UserCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _require = require(\"../store\"),\n  useUserStore = _require.useUserStore;\nvar ParticipantsScreen = function ParticipantsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useSocketStore = useSocketStore(),\n    socket = _useSocketStore.socket,\n    setSocket = _useSocketStore.setSocket;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    participants = _useState2[0],\n    setParticipants = _useState2[1];\n  var _useUserStore = useUserStore(),\n    userName = _useUserStore.userName,\n    userOrganisation = _useUserStore.userOrganisation,\n    userDesignation = _useUserStore.userDesignation,\n    userProfilePic = _useUserStore.userProfilePic;\n  var _useSocketStore2 = useSocketStore(),\n    userId = _useSocketStore2.userId,\n    setUserId = _useSocketStore2.setUserId,\n    roomId = _useSocketStore2.roomId,\n    hatColor = _useSocketStore2.hatColor,\n    setHatColor = _useSocketStore2.setHatColor,\n    isAdmin = _useSocketStore2.isAdmin;\n  useEffect(function () {\n    console.log(\"_______JoinSession.js_______\");\n    console.log(\"socket initialize: \");\n    socketConnection();\n  }, []);\n  var socketConnection = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var initializedSocket = yield socketSingleton.initSocket();\n      setSocket(initializedSocket);\n      initializedSocket.on(\"connect\", function () {\n        console.log(\"socket connected: \", initializedSocket.id);\n        var id = initializedSocket.id;\n        setUserId(id);\n        console.log(\"socket id: \", id);\n      });\n    });\n    return function socketConnection() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    socket.on(\"roomJoined\", function (data) {\n      console.log(\"roomJoined event received: \", data);\n      setParticipants(data);\n    });\n    return function () {\n      socket.off(\"roomJoined\");\n    };\n  }, []);\n  var sampleParticipants = [{\n    id: \"6AxDMLtjF4UcvLLOAAAJ\",\n    name: \"Manav Malhotra\",\n    role: \"Developer\",\n    hatRole: \"blue\",\n    isAdmin: true\n  }, {\n    id: \"1\",\n    name: \"Dummy User 2\",\n    role: \"Dummy Role 2\",\n    hatRole: \"red\",\n    isAdmin: false\n  }, {\n    id: \"1\",\n    name: \"Dummy User 2\",\n    role: \"Dummy Role 2\",\n    hatRole: \"white\",\n    isAdmin: false\n  }];\n  return _jsx(SafeAreaView, {\n    children: isAdmin ? _jsxs(View, {\n      children: [_jsx(TimerComponent, {\n        duration: \"10\"\n      }), _jsx(Text, {\n        children: \"Participants in the room:\"\n      }), _jsxs(Text, {\n        children: [\"Admin ID: \", userId]\n      }), _jsxs(Text, {\n        children: [\"Room ID: \", roomId]\n      }), participants.map(function (user, index) {\n        return _jsx(UserCard, {\n          user: user\n        }, index);\n      })]\n    }) : _jsxs(View, {\n      style: styles.participant,\n      children: [_jsxs(Text, {\n        children: [\"User ID: \", userId]\n      }), _jsxs(Text, {\n        children: [\"Room ID: \", roomId]\n      }), _jsx(HatColor, {\n        hatColor: hatColor\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  participant: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  }\n});\nexport default ParticipantsScreen;","map":{"version":3,"names":["React","useState","useEffect","Text","View","SafeAreaView","StyleSheet","useSocketStore","socketSingleton","HatColor","TimerComponent","UserCard","jsx","_jsx","jsxs","_jsxs","_require","require","useUserStore","ParticipantsScreen","_ref","navigation","_useSocketStore","socket","setSocket","_useState","_useState2","_slicedToArray","participants","setParticipants","_useUserStore","userName","userOrganisation","userDesignation","userProfilePic","_useSocketStore2","userId","setUserId","roomId","hatColor","setHatColor","isAdmin","console","log","socketConnection","_ref2","_asyncToGenerator","initializedSocket","initSocket","on","id","apply","arguments","data","off","sampleParticipants","name","role","hatRole","children","duration","map","user","index","style","styles","participant","create","fontSize","fontWeight"],"sources":["C:/Users/manav/projects/ironman_client/components/ParticipantsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Text, View, SafeAreaView, StyleSheet } from \"react-native\";\r\nimport { useSocketStore } from \"../store\";\r\nimport socketSingleton from \"../SocketManager\";\r\nimport HatColor from \"./HatColor\";\r\nimport TimerComponent from \"./TimerComponent\";\r\nimport UserCard from \"./UserCard\";\r\nconst { useUserStore } = require(\"../store\");\r\n\r\nconst ParticipantsScreen = ({ navigation }) => {\r\n  const { socket, setSocket } = useSocketStore();\r\n\r\n  const [participants, setParticipants] = useState([]);\r\n\r\n  const { userName, userOrganisation, userDesignation, userProfilePic } =\r\n    useUserStore();\r\n\r\n  const { userId, setUserId, roomId, hatColor, setHatColor, isAdmin } =\r\n    useSocketStore();\r\n\r\n  useEffect(() => {\r\n    console.log(\"_______JoinSession.js_______\");\r\n    console.log(\"socket initialize: \");\r\n    socketConnection();\r\n  }, []);\r\n\r\n  const socketConnection = async () => {\r\n    const initializedSocket = await socketSingleton.initSocket();\r\n    setSocket(initializedSocket);\r\n    initializedSocket.on(\"connect\", () => {\r\n      console.log(\"socket connected: \", initializedSocket.id);\r\n      let id = initializedSocket.id;\r\n      setUserId(id);\r\n      console.log(\"socket id: \", id);\r\n    });\r\n  };\r\n\r\n  // listen for roomjoined event from server and update the participants list\r\n\r\n  useEffect(() => {\r\n    socket.on(\"roomJoined\", (data) => {\r\n      console.log(\"roomJoined event received: \", data);\r\n      setParticipants(data);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"roomJoined\");\r\n    };\r\n  }, []);\r\n\r\n  let sampleParticipants = [\r\n    {\r\n      id: \"6AxDMLtjF4UcvLLOAAAJ\",\r\n      name: \"Manav Malhotra\",\r\n      role: \"Developer\",\r\n      hatRole: \"blue\",\r\n      isAdmin: true,\r\n    },\r\n    {\r\n      id: \"1\",\r\n      name: \"Dummy User 2\",\r\n      role: \"Dummy Role 2\",\r\n      hatRole: \"red\",\r\n      isAdmin: false,\r\n    },\r\n    {\r\n      id: \"1\",\r\n      name: \"Dummy User 2\",\r\n      role: \"Dummy Role 2\",\r\n      hatRole: \"white\",\r\n      isAdmin: false,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      {isAdmin ? (\r\n        <View>\r\n          <TimerComponent duration=\"10\" />\r\n          <Text>Participants in the room:</Text>\r\n          <Text>Admin ID: {userId}</Text>\r\n          <Text>Room ID: {roomId}</Text>\r\n          {\r\n            participants.map((user, index) => {\r\n              return (\r\n\r\n                  <UserCard key={index} user={user} />\r\n\r\n              );\r\n            })\r\n          }\r\n        </View>\r\n      ) : (\r\n        <View style={styles.participant}>\r\n          <Text>User ID: {userId}</Text>\r\n          <Text>Room ID: {roomId}</Text>\r\n\r\n          <HatColor hatColor={hatColor} />\r\n        </View>\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  participant: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nexport default ParticipantsScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}