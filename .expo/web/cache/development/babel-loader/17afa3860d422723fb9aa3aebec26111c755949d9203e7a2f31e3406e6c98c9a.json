{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Image } from \"expo-image\";\nimport { Color, FontFamily, FontSize, Padding, Border } from \"../GlobalStyles\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar TimerComponent = function TimerComponent(_ref) {\n  var duration = _ref.duration;\n  var initialTime = duration * 60;\n  var _useState = useState(initialTime),\n    _useState2 = _slicedToArray(_useState, 2),\n    time = _useState2[0],\n    setTime = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    running = _useState4[0],\n    setRunning = _useState4[1];\n  var intervalRef = useRef(null);\n  var startTimer = function startTimer() {\n    if (!running) {\n      intervalRef.current = setInterval(function () {\n        setTime(function (prevTime) {\n          if (prevTime > 0) {\n            return prevTime - 1;\n          } else {\n            clearInterval(intervalRef.current);\n            setRunning(false);\n            return 0;\n          }\n        });\n      }, 1000);\n      setRunning(true);\n    }\n  };\n  var stopTimer = function stopTimer() {\n    clearInterval(intervalRef.current);\n    setRunning(false);\n  };\n  var resetTimer = function resetTimer() {\n    clearInterval(intervalRef.current);\n    setTime(initialTime);\n    setRunning(false);\n  };\n  var formatTime = function formatTime(seconds) {\n    var minutes = Math.floor(seconds / 60);\n    var remainingSeconds = seconds % 60;\n    return minutes + \":\" + (remainingSeconds < 10 ? \"0\" : \"\") + remainingSeconds;\n  };\n  return _jsxs(View, {\n    style: styles.timerContainer,\n    children: [_jsx(View, {\n      style: styles.timeText,\n      children: _jsxs(Text, {\n        style: [styles.timerText, styles.opaque],\n        children: [\"Session Ends in\", formatTime(time), \" sec\"]\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: running ? stopTimer : startTimer,\n      children: _jsx(Image, {\n        style: styles.icon,\n        source: require(\"../assets/play.svg\")\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: resetTimer,\n      children: _jsx(Image, {\n        style: styles.resetIcon,\n        source: require(\"../assets/reset.svg\")\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  timerContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    borderWidth: 1,\n    borderRadius: 25,\n    borderColor: \"#000\",\n    padding: 10,\n    margin: 10,\n    fontFamily: FontFamily.manropeSemiBold\n  },\n  opaque: {\n    opacity: 0.7\n  },\n  timeText: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  timerText: {\n    fontSize: FontSize.size_base\n  },\n  icon: {\n    width: 50,\n    height: 50\n  },\n  resetIcon: {\n    width: 25,\n    height: 25\n  }\n});\nexport default TimerComponent;","map":{"version":3,"names":["React","useState","useRef","View","Text","TouchableOpacity","StyleSheet","Image","Color","FontFamily","FontSize","Padding","Border","jsxs","_jsxs","jsx","_jsx","TimerComponent","_ref","duration","initialTime","_useState","_useState2","_slicedToArray","time","setTime","_useState3","_useState4","running","setRunning","intervalRef","startTimer","current","setInterval","prevTime","clearInterval","stopTimer","resetTimer","formatTime","seconds","minutes","Math","floor","remainingSeconds","style","styles","timerContainer","children","timeText","timerText","opaque","onPress","icon","source","require","resetIcon","create","alignItems","justifyContent","flexDirection","borderWidth","borderRadius","borderColor","padding","margin","fontFamily","manropeSemiBold","opacity","fontSize","size_base","width","height"],"sources":["C:/Users/manav/projects/ironman_client/components/TimerComponent.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { View, Text, TouchableOpacity, StyleSheet } from \"react-native\";\r\nimport { Image } from \"expo-image\";\r\nimport { Color, FontFamily, FontSize, Padding, Border } from \"../GlobalStyles\";\r\n\r\nconst TimerComponent = ({ duration }) => {\r\n  const initialTime = duration * 60; // 10 minutes in seconds\r\n  const [time, setTime] = useState(initialTime);\r\n  const [running, setRunning] = useState(false);\r\n  const intervalRef = useRef(null);\r\n\r\n  const startTimer = () => {\r\n    if (!running) {\r\n      intervalRef.current = setInterval(() => {\r\n        setTime((prevTime) => {\r\n          if (prevTime > 0) {\r\n            return prevTime - 1;\r\n          } else {\r\n            clearInterval(intervalRef.current);\r\n            setRunning(false);\r\n            return 0;\r\n          }\r\n        });\r\n      }, 1000);\r\n      setRunning(true);\r\n    }\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    clearInterval(intervalRef.current);\r\n    setRunning(false);\r\n  };\r\n\r\n  const resetTimer = () => {\r\n    clearInterval(intervalRef.current);\r\n    setTime(initialTime);\r\n    setRunning(false);\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes}:${remainingSeconds < 10 ? \"0\" : \"\"}${remainingSeconds}`;\r\n  };\r\n\r\n  return (\r\n    <View style={styles.timerContainer}>\r\n      <View style={styles.timeText}>\r\n        <Text style={[styles.timerText, styles.opaque]}>\r\n          Session Ends in{formatTime(time)} sec\r\n        </Text>\r\n      </View>\r\n\r\n      <TouchableOpacity onPress={running ? stopTimer : startTimer}>\r\n        <Image style={styles.icon} source={require(\"../assets/play.svg\")} />\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity onPress={resetTimer}>\r\n        <Image\r\n          style={styles.resetIcon}\r\n          source={require(\"../assets/reset.svg\")}\r\n        />\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  timerContainer: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"row\",\r\n    borderWidth: 1,\r\n    borderRadius: 25,\r\n    borderColor: \"#000\",\r\n    padding: 10,\r\n    margin: 10,\r\n    fontFamily: FontFamily.manropeSemiBold,\r\n  },\r\n  opaque: {\r\n    opacity: 0.7,\r\n  },\r\n  timeText: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  timerText: {\r\n    fontSize: FontSize.size_base,\r\n  },\r\n  icon: {\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  resetIcon: {\r\n    width: 25,\r\n    height: 25,\r\n  },\r\n});\r\n\r\nexport default TimerComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}