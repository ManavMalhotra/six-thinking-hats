{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TimerComponent from \"../ui/TimerComponent\";\nimport UserCard from \"../ui/UserCard\";\nimport { useUserStore, useSocketStore } from \"../../store\";\nimport Text from \"react-native-paper/lib/module/components/Typography/Text\";\nimport Accordion from \"../ui/Accordion\";\nimport IconButton from \"react-native-paper/lib/module/components/IconButton/IconButton\";\nimport { Image } from \"expo-image\";\nimport emptySession from \"../../assets/emptyPartcipants.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar ParticipantsScreen = function ParticipantsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useSocketStore = useSocketStore(),\n    socket = _useSocketStore.socket,\n    setSocket = _useSocketStore.setSocket;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    participants = _useState2[0],\n    setParticipants = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    adminUser = _useState4[0],\n    setAdminUser = _useState4[1];\n  var _useUserStore = useUserStore(),\n    userName = _useUserStore.userName,\n    userOrganisation = _useUserStore.userOrganisation,\n    userDesignation = _useUserStore.userDesignation,\n    userProfilePic = _useUserStore.userProfilePic;\n  var _useSocketStore2 = useSocketStore(),\n    userId = _useSocketStore2.userId,\n    setUserId = _useSocketStore2.setUserId,\n    roomId = _useSocketStore2.roomId,\n    hatColor = _useSocketStore2.hatColor,\n    setHatColor = _useSocketStore2.setHatColor,\n    isAdmin = _useSocketStore2.isAdmin;\n  useEffect(function () {}, []);\n  useEffect(function () {\n    socket.on(\"roomJoined\", function (data) {\n      console.log(\"roomJoined event received: \", data);\n      data.forEach(function (user) {\n        console.log(\"Participants: \", user);\n        if (user.isAdmin) {\n          setAdminUser(user);\n        } else if (!participants.some(function (p) {\n          return p.id === user.id;\n        })) {\n          setParticipants(function (prevParticipants) {\n            return [].concat(_toConsumableArray(prevParticipants), [user]);\n          });\n        }\n      });\n    });\n    return function () {\n      socket.off(\"roomJoined\");\n    };\n  }, [participants, setParticipants, setAdminUser]);\n  console.log(\"Participants State: \", participants);\n  console.log(\"!__________________________!\");\n  var changeEveryoneHatColor = function changeEveryoneHatColor(color) {\n    return function () {\n      socket.emit(\"changeHatColor\", {\n        roomId: roomId,\n        userId: userId,\n        hatColor: color\n      });\n    };\n  };\n  var sampleParticipants = [{\n    id: \"6AxDMLtjF4UcvLLOAAAJ\",\n    name: \"Manav Malhotra\",\n    role: \"Developer\",\n    hatRole: \"blue\",\n    isAdmin: true\n  }, {\n    id: \"2\",\n    name: \"Dummy User 2\",\n    role: \"Dummy Role 2\",\n    hatRole: \"red\",\n    isAdmin: false\n  }, {\n    id: \"3\",\n    name: \"Dummy User 3\",\n    role: \"Dummy Role 3\",\n    hatRole: \"white\",\n    isAdmin: false\n  }];\n  return _jsx(SafeAreaView, {\n    children: isAdmin ? _jsxs(View, {\n      children: [_jsx(Accordion, {\n        headerText: \"About Session\",\n        content: _jsxs(_Fragment, {\n          children: [_jsx(TimerComponent, {\n            duration: 10\n          }), _jsxs(View, {\n            style: styles.hatColors,\n            children: [_jsx(IconButton, {\n              style: styles.hatStyle,\n              icon: \"checkbox-blank-circle\",\n              iconColor: \"black\",\n              size: 60,\n              onPress: changeEveryoneHatColor(\"black\")\n            }), _jsx(IconButton, {\n              style: styles.hatStyle,\n              icon: \"checkbox-blank-circle\",\n              iconColor: \"white\",\n              size: 60\n            }), _jsx(IconButton, {\n              style: styles.hatStyle,\n              icon: \"checkbox-blank-circle\",\n              iconColor: \"yellow\",\n              size: 60\n            }), _jsx(IconButton, {\n              style: styles.hatStyle,\n              icon: \"checkbox-blank-circle\",\n              iconColor: \"green\",\n              size: 60\n            }), _jsx(IconButton, {\n              style: styles.hatStyle,\n              icon: \"checkbox-blank-circle\",\n              iconColor: \"red\",\n              size: 60\n            })]\n          })]\n        })\n      }), _jsx(Accordion, {\n        headerText: \"Participants\",\n        content: participants.map(function (user, index) {\n          if (user.isAdmin) {\n            return null;\n          }\n          return _jsx(UserCard, {\n            user: user,\n            roomId: roomId,\n            adminCard: false\n          }, index);\n        })\n      })]\n    }) : _jsxs(View, {\n      children: [_jsxs(Text, {\n        variant: \"headlineSmall\",\n        style: {\n          color: \"black\"\n        },\n        children: [\"Name: \", userName]\n      }), _jsx(UserCard, {\n        user: adminUser,\n        roomId: roomId,\n        adminCard: true\n      }), _jsx(Image, {\n        source: emptySession,\n        style: {\n          width: 293,\n          height: 84\n        }\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  participant: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  hatColors: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 0,\n    margin: 0,\n    paddingHorizontal: 50\n  },\n  hatStyle: {\n    marginHorizontal: 0\n  }\n});\nexport default ParticipantsScreen;","map":{"version":3,"names":["React","useState","useEffect","View","SafeAreaView","StyleSheet","TimerComponent","UserCard","useUserStore","useSocketStore","Text","Accordion","IconButton","Image","emptySession","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ParticipantsScreen","_ref","navigation","_useSocketStore","socket","setSocket","_useState","_useState2","_slicedToArray","participants","setParticipants","_useState3","_useState4","adminUser","setAdminUser","_useUserStore","userName","userOrganisation","userDesignation","userProfilePic","_useSocketStore2","userId","setUserId","roomId","hatColor","setHatColor","isAdmin","on","data","console","log","forEach","user","some","p","id","prevParticipants","concat","_toConsumableArray","off","changeEveryoneHatColor","color","emit","sampleParticipants","name","role","hatRole","children","headerText","content","duration","style","styles","hatColors","hatStyle","icon","iconColor","size","onPress","map","index","adminCard","variant","source","width","height","create","participant","fontSize","fontWeight","flexDirection","justifyContent","alignItems","padding","margin","paddingHorizontal","marginHorizontal"],"sources":["C:/Users/manav/projects/six-thinking-hats/components/screens/ParticipantsScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, SafeAreaView, StyleSheet, Share } from \"react-native\";\r\nimport socketSingleton from \"../../SocketManager\";\r\nimport HatColor from \"../ui/HatColor\";\r\nimport TimerComponent from \"../ui/TimerComponent\";\r\nimport UserCard from \"../ui/UserCard\";\r\nimport { useUserStore, useSocketStore } from \"../../store\";\r\nimport { Text } from \"react-native-paper\";\r\nimport Accordion from \"../ui/Accordion\";\r\nimport { IconButton } from \"react-native-paper\";\r\n\r\nimport { Image } from \"expo-image\";\r\n\r\nimport emptySession from \"../../assets/emptyPartcipants.png\";\r\n\r\nconst ParticipantsScreen = ({ navigation }) => {\r\n  const { socket, setSocket } = useSocketStore();\r\n\r\n  const [participants, setParticipants] = useState([]);\r\n  const [adminUser, setAdminUser] = useState({});\r\n\r\n  const { userName, userOrganisation, userDesignation, userProfilePic } =\r\n    useUserStore();\r\n\r\n  const { userId, setUserId, roomId, hatColor, setHatColor, isAdmin } =\r\n    useSocketStore();\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"roomJoined\", (data) => {\r\n      console.log(\"roomJoined event received: \", data);\r\n\r\n      data.forEach((user) => {\r\n        console.log(\"Participants: \", user);\r\n        if (user.isAdmin) {\r\n          setAdminUser(user);\r\n        } else if (!participants.some((p) => p.id === user.id)) {\r\n          setParticipants((prevParticipants) => [...prevParticipants, user]);\r\n        }\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"roomJoined\");\r\n    };\r\n  }, [participants, setParticipants, setAdminUser]);\r\n  console.log(\"Participants State: \", participants);\r\n  console.log(\"!__________________________!\");\r\n\r\n  const changeEveryoneHatColor = (color) => {\r\n    return () => {\r\n      socket.emit(\"changeHatColor\", {\r\n        roomId,\r\n        userId,\r\n        hatColor: color,\r\n      });\r\n    };\r\n  };\r\n\r\n  let sampleParticipants = [\r\n    {\r\n      id: \"6AxDMLtjF4UcvLLOAAAJ\",\r\n      name: \"Manav Malhotra\",\r\n      role: \"Developer\",\r\n      hatRole: \"blue\",\r\n      isAdmin: true,\r\n    },\r\n    {\r\n      id: \"2\", // Unique ID\r\n      name: \"Dummy User 2\",\r\n      role: \"Dummy Role 2\",\r\n      hatRole: \"red\",\r\n      isAdmin: false,\r\n    },\r\n    {\r\n      id: \"3\", // Unique ID\r\n      name: \"Dummy User 3\", // Adjust names to be unique as well if needed\r\n      role: \"Dummy Role 3\", // Adjust roles to be unique as well if needed\r\n      hatRole: \"white\",\r\n      isAdmin: false,\r\n    },\r\n  ];\r\n  return (\r\n    <SafeAreaView>\r\n      {isAdmin ? (\r\n        <View>\r\n          <Accordion\r\n            headerText=\"About Session\"\r\n            content={\r\n              <>\r\n                <TimerComponent duration={10} />\r\n                <View style={styles.hatColors}>\r\n                  <IconButton\r\n                    style={styles.hatStyle}\r\n                    icon=\"checkbox-blank-circle\"\r\n                    iconColor=\"black\"\r\n                    size={60}\r\n                    onPress={changeEveryoneHatColor(\"black\")}\r\n                  />\r\n                  <IconButton\r\n                    style={styles.hatStyle}\r\n                    icon=\"checkbox-blank-circle\"\r\n                    iconColor=\"white\"\r\n                    size={60}\r\n                  />\r\n                  <IconButton\r\n                    style={styles.hatStyle}\r\n                    icon=\"checkbox-blank-circle\"\r\n                    iconColor=\"yellow\"\r\n                    size={60}\r\n                  />\r\n                  <IconButton\r\n                    style={styles.hatStyle}\r\n                    icon=\"checkbox-blank-circle\"\r\n                    iconColor=\"green\"\r\n                    size={60}\r\n                  />\r\n                  <IconButton\r\n                    style={styles.hatStyle}\r\n                    icon=\"checkbox-blank-circle\"\r\n                    iconColor=\"red\"\r\n                    size={60}\r\n                  />\r\n                </View>\r\n              </>\r\n            }\r\n          />\r\n\r\n          <Accordion\r\n            headerText=\"Participants\"\r\n            content={participants.map((user, index) => {\r\n              if (user.isAdmin) {\r\n                return null;\r\n              }\r\n              return (\r\n                <UserCard\r\n                  key={index}\r\n                  user={user}\r\n                  roomId={roomId}\r\n                  adminCard={false}\r\n                />\r\n              );\r\n            })}\r\n          />\r\n        </View>\r\n      ) : (\r\n        <View>\r\n          <Text variant=\"headlineSmall\" style={{ color: \"black\" }}>\r\n            Name: {userName}\r\n          </Text>\r\n          <UserCard user={adminUser} roomId={roomId} adminCard={true} />\r\n          {/* <HatColor hatColor={hatColor} /> */}\r\n          <Image source={emptySession} style={{ width: 293, height: 84 }} />\r\n        </View>\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  participant: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  hatColors: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: 0,\r\n    margin: 0,\r\n    paddingHorizontal: 50,\r\n  },\r\n  hatStyle: {\r\n    marginHorizontal: 0,\r\n  },\r\n});\r\n\r\nexport default ParticipantsScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}