{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useSocketStore from \"../store\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ParticipantsScreen = function ParticipantsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    participants = _useState2[0],\n    setParticipants = _useState2[1];\n  var socket = useSocketStore(function (state) {\n    return state.socket;\n  });\n  var userId = useSocketStore(function (state) {\n    return state.userId;\n  });\n  useEffect(function () {\n    if (!socket) {\n      navigation.navigate(\"Home\");\n    }\n    socket.on(\"roomData\", function (_ref2) {\n      var users = _ref2.users;\n      for (var i = 0; i < users.length; i++) {\n        console.log(users[i]);\n        users[i].name = users[i].name || \"Anonymous\";\n      }\n      setParticipants(users);\n    });\n  }, []);\n  return _jsx(SafeAreaView, {\n    children: isAdmin ? _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Participants in the room:\"\n      }), _jsxs(Text, {\n        children: [\"Admin ID: \", userId]\n      }), participants.map(function (participant) {\n        return _jsxs(Text, {\n          style: styles.participant,\n          children: [participant.id, \" : \", participant.hatRole]\n        }, participant.id);\n      })]\n    }) : _jsx(View, {\n      children: _jsxs(Text, {\n        children: [\"Non-admin ID: \", userId]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  participant: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  }\n});\nexport default ParticipantsScreen;","map":{"version":3,"names":["React","useState","useEffect","Text","View","SafeAreaView","StyleSheet","useSocketStore","jsx","_jsx","jsxs","_jsxs","ParticipantsScreen","_ref","navigation","_useState","_useState2","_slicedToArray","participants","setParticipants","socket","state","userId","navigate","on","_ref2","users","i","length","console","log","name","children","isAdmin","map","participant","style","styles","id","hatRole","create","fontSize","fontWeight"],"sources":["C:/Users/manav/projects/ironman_client/components/ParticipantsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Text, View, SafeAreaView, StyleSheet } from \"react-native\";\r\nimport useSocketStore from \"../store\";\r\n\r\nconst ParticipantsScreen = ({ navigation }) => {\r\n  // const [userId, setUserId] = useState(\"\");\r\n  const [participants, setParticipants] = useState([]);\r\n  // const { userId, isAdmin, hatColor } = useSocketStore();\r\n  \r\n  const socket = useSocketStore((state) => state.socket);\r\n  const userId = useSocketStore((state) => state.userId);\r\n\r\n  useEffect(() => {\r\n    if (!socket) {\r\n      navigation.navigate(\"Home\");\r\n    }\r\n    // Listen for the roomJoined event\r\n    socket.on(\"roomData\", ({ users }) => {\r\n      // Update participants state with the received data\r\n      for (let i = 0; i < users.length; i++) {\r\n        console.log(users[i]);\r\n        users[i].name = users[i].name || \"Anonymous\";\r\n      }\r\n      setParticipants(users);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      {isAdmin ? (\r\n        <View>\r\n          <Text>Participants in the room:</Text>\r\n          <Text>Admin ID: {userId}</Text>\r\n          {participants.map((participant) => (\r\n            <Text style={styles.participant} key={participant.id}>\r\n              {participant.id} : {participant.hatRole}\r\n            </Text>\r\n          ))}\r\n        </View>\r\n      ) : (\r\n        <View>\r\n          <Text>Non-admin ID: {userId}</Text>\r\n        </View>\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  participant: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nexport default ParticipantsScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,UAAA;AAEnD,OAAOC,cAAc;AAAiB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEtC,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAEtC,IAAAC,SAAA,GAAwCd,QAAQ,CAAC,EAAE,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EAGpC,IAAMI,MAAM,GAAGb,cAAc,CAAC,UAACc,KAAK;IAAA,OAAKA,KAAK,CAACD,MAAM;EAAA,EAAC;EACtD,IAAME,MAAM,GAAGf,cAAc,CAAC,UAACc,KAAK;IAAA,OAAKA,KAAK,CAACC,MAAM;EAAA,EAAC;EAEtDpB,SAAS,CAAC,YAAM;IACd,IAAI,CAACkB,MAAM,EAAE;MACXN,UAAU,CAACS,QAAQ,CAAC,MAAM,CAAC;IAC7B;IAEAH,MAAM,CAACI,EAAE,CAAC,UAAU,EAAE,UAAAC,KAAA,EAAe;MAAA,IAAZC,KAAK,GAAAD,KAAA,CAALC,KAAK;MAE5B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;QACrCE,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACC,CAAC,CAAC,CAAC;QACrBD,KAAK,CAACC,CAAC,CAAC,CAACI,IAAI,GAAGL,KAAK,CAACC,CAAC,CAAC,CAACI,IAAI,IAAI,WAAW;MAC9C;MACAZ,eAAe,CAACO,KAAK,CAAC;IACxB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,OACEjB,IAAA,CAACJ,YAAY;IAAA2B,QAAA,EACVC,OAAO,GACNtB,KAAA,CAACP,IAAI;MAAA4B,QAAA,GACHvB,IAAA,CAACN,IAAI;QAAA6B,QAAA,EAAC;MAAyB,CAAM,CAAC,EACtCrB,KAAA,CAACR,IAAI;QAAA6B,QAAA,GAAC,YAAU,EAACV,MAAM;MAAA,CAAO,CAAC,EAC9BJ,YAAY,CAACgB,GAAG,CAAC,UAACC,WAAW;QAAA,OAC5BxB,KAAA,CAACR,IAAI;UAACiC,KAAK,EAAEC,MAAM,CAACF,WAAY;UAAAH,QAAA,GAC7BG,WAAW,CAACG,EAAE,EAAC,KAAG,EAACH,WAAW,CAACI,OAAO;QAAA,GADHJ,WAAW,CAACG,EAE5C,CAAC;MAAA,CACR,CAAC;IAAA,CACE,CAAC,GAEP7B,IAAA,CAACL,IAAI;MAAA4B,QAAA,EACHrB,KAAA,CAACR,IAAI;QAAA6B,QAAA,GAAC,gBAAc,EAACV,MAAM;MAAA,CAAO;IAAC,CAC/B;EACP,CACW,CAAC;AAEnB,CAAC;AAED,IAAMe,MAAM,GAAG/B,UAAU,CAACkC,MAAM,CAAC;EAC/BL,WAAW,EAAE;IACXM,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAe9B,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}