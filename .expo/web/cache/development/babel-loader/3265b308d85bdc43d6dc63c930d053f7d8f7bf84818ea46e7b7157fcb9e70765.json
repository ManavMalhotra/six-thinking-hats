{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { SocketManager } from \"../SocketManager\";\nimport useSocketStore from \"../store\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ParticipantsScreen = function ParticipantsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    socket = _useState2[0],\n    setSocket = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    participants = _useState4[0],\n    setParticipants = _useState4[1];\n  var _useSocketStore = useSocketStore(),\n    userId = _useSocketStore.userId,\n    isAdmin = _useSocketStore.isAdmin,\n    hatColor = _useSocketStore.hatColor,\n    setuserId = _useSocketStore.setuserId,\n    setAdmin = _useSocketStore.setAdmin,\n    setHatColor = _useSocketStore.setHatColor;\n  if (socket) {\n    socket.onAny(function (event) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      console.log(event, args);\n    });\n  }\n  useEffect(function () {\n    setSocket(socket);\n    socket.on(\"roomData\", function (_ref2) {\n      var users = _ref2.users;\n      for (var i = 0; i < users.length; i++) {\n        console.log(users[i]);\n        users[i].name = users[i].name || \"Anonymous\";\n      }\n      setParticipants(users);\n    });\n    return function () {\n      socket.off(\"roomJoined\");\n    };\n  }, []);\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Participants in the room:\"\n      }), _jsxs(Text, {\n        children: [\"Admin ID: \", userId]\n      }), participants.map(function (participant) {\n        return _jsxs(Text, {\n          style: styles.participant,\n          children: [participant.id, \" : \", participant.hatRole]\n        }, participant.id);\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  participant: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  }\n});\nexport default ParticipantsScreen;","map":{"version":3,"names":["React","useState","useEffect","Text","View","SafeAreaView","StyleSheet","SocketManager","useSocketStore","jsx","_jsx","jsxs","_jsxs","ParticipantsScreen","_ref","navigation","_useState","_useState2","_slicedToArray","socket","setSocket","_useState3","_useState4","participants","setParticipants","_useSocketStore","userId","isAdmin","hatColor","setuserId","setAdmin","setHatColor","onAny","event","_len","arguments","length","args","Array","_key","console","log","on","_ref2","users","i","name","off","children","map","participant","style","styles","id","hatRole","create","fontSize","fontWeight"],"sources":["C:/Users/manav/projects/ironman_client/components/ParticipantsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Text, View, SafeAreaView, StyleSheet } from \"react-native\";\r\nimport { SocketManager } from \"../SocketManager\";\r\nimport useSocketStore from \"../store\";\r\nconst ParticipantsScreen = ({ navigation }) => {\r\n  const [socket, setSocket] = useState(null);\r\n  // const [userId, setUserId] = useState(\"\");\r\n  const [participants, setParticipants] = useState([]);\r\n  const { userId, isAdmin, hatColor, setuserId, setAdmin, setHatColor } = useSocketStore();\r\n\r\n\r\n  if (socket) {\r\n    socket.onAny((event, ...args) => {\r\n      console.log(event, args);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setSocket(socket);\r\n\r\n    // Listen for the roomJoined event\r\n    socket.on(\"roomData\", ({users}) => {\r\n      // Update participants state with the received data\r\n      for (let i = 0; i < users.length; i++) {\r\n        console.log(users[i]);\r\n        users[i].name = users[i].name || \"Anonymous\";\r\n      }\r\n        setParticipants(users);\r\n    });\r\n\r\n    // Clean up the event listener when the component unmounts\r\n    return () => {\r\n      socket.off(\"roomJoined\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      <View>\r\n        <Text>Participants in the room:</Text>\r\n        <Text>Admin ID: {userId}</Text>\r\n        {participants.map((participant) => (\r\n          <Text style={styles.participant} key={participant.id}>{participant.id} : {participant.hatRole}</Text>\r\n        ))}\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    participant: {\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n    },\r\n})\r\n\r\nexport default ParticipantsScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,UAAA;AAEnD,SAASC,aAAa;AACtB,OAAOC,cAAc;AAAiB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACtC,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACtC,IAAAC,SAAA,GAA4Bf,QAAQ,CAAC,IAAI,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EAExB,IAAAI,UAAA,GAAwCpB,QAAQ,CAAC,EAAE,CAAC;IAAAqB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7CE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAAG,eAAA,GAAwEjB,cAAc,CAAC,CAAC;IAAhFkB,MAAM,GAAAD,eAAA,CAANC,MAAM;IAAEC,OAAO,GAAAF,eAAA,CAAPE,OAAO;IAAEC,QAAQ,GAAAH,eAAA,CAARG,QAAQ;IAAEC,SAAS,GAAAJ,eAAA,CAATI,SAAS;IAAEC,QAAQ,GAAAL,eAAA,CAARK,QAAQ;IAAEC,WAAW,GAAAN,eAAA,CAAXM,WAAW;EAGnE,IAAIZ,MAAM,EAAE;IACVA,MAAM,CAACa,KAAK,CAAC,UAACC,KAAK,EAAc;MAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAATC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAJF,IAAI,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;MAAA;MAC1BC,OAAO,CAACC,GAAG,CAACR,KAAK,EAAEI,IAAI,CAAC;IAC1B,CAAC,CAAC;EACJ;EAEAnC,SAAS,CAAC,YAAM;IACdkB,SAAS,CAACD,MAAM,CAAC;IAGjBA,MAAM,CAACuB,EAAE,CAAC,UAAU,EAAE,UAAAC,KAAA,EAAa;MAAA,IAAXC,KAAK,GAAAD,KAAA,CAALC,KAAK;MAE3B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACR,MAAM,EAAES,CAAC,EAAE,EAAE;QACrCL,OAAO,CAACC,GAAG,CAACG,KAAK,CAACC,CAAC,CAAC,CAAC;QACrBD,KAAK,CAACC,CAAC,CAAC,CAACC,IAAI,GAAGF,KAAK,CAACC,CAAC,CAAC,CAACC,IAAI,IAAI,WAAW;MAC9C;MACEtB,eAAe,CAACoB,KAAK,CAAC;IAC1B,CAAC,CAAC;IAGF,OAAO,YAAM;MACXzB,MAAM,CAAC4B,GAAG,CAAC,YAAY,CAAC;IAC1B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OACErC,IAAA,CAACL,YAAY;IAAA2C,QAAA,EACXpC,KAAA,CAACR,IAAI;MAAA4C,QAAA,GACHtC,IAAA,CAACP,IAAI;QAAA6C,QAAA,EAAC;MAAyB,CAAM,CAAC,EACtCpC,KAAA,CAACT,IAAI;QAAA6C,QAAA,GAAC,YAAU,EAACtB,MAAM;MAAA,CAAO,CAAC,EAC9BH,YAAY,CAAC0B,GAAG,CAAC,UAACC,WAAW;QAAA,OAC5BtC,KAAA,CAACT,IAAI;UAACgD,KAAK,EAAEC,MAAM,CAACF,WAAY;UAAAF,QAAA,GAAuBE,WAAW,CAACG,EAAE,EAAC,KAAG,EAACH,WAAW,CAACI,OAAO;QAAA,GAAvDJ,WAAW,CAACG,EAAkD,CAAC;MAAA,CACtG,CAAC;IAAA,CACE;EAAC,CACK,CAAC;AAEnB,CAAC;AAED,IAAMD,MAAM,GAAG9C,UAAU,CAACiD,MAAM,CAAC;EAC7BL,WAAW,EAAE;IACTM,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EAChB;AACJ,CAAC,CAAC;AAEF,eAAe5C,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}