{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSocketStore } from \"../store\";\nimport socketSingleton from \"../SocketManager\";\nimport HatColor from \"./HatColor\";\nimport TimerComponent from \"./TimerComponent\";\nimport UserCard from \"./UserCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _require = require(\"../store\"),\n  useUserStore = _require.useUserStore;\nvar ParticipantsScreen = function ParticipantsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useSocketStore = useSocketStore(),\n    socket = _useSocketStore.socket,\n    setSocket = _useSocketStore.setSocket;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isAdmin = _useState2[0],\n    setIsAdmin = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    participants = _useState4[0],\n    setParticipants = _useState4[1];\n  var _useUserStore = useUserStore(),\n    userName = _useUserStore.userName,\n    userOrganisation = _useUserStore.userOrganisation,\n    userDesignation = _useUserStore.userDesignation,\n    userProfilePic = _useUserStore.userProfilePic;\n  var _useSocketStore2 = useSocketStore(),\n    userId = _useSocketStore2.userId,\n    setUserId = _useSocketStore2.setUserId,\n    roomId = _useSocketStore2.roomId,\n    setRoomId = _useSocketStore2.setRoomId,\n    hatColor = _useSocketStore2.hatColor,\n    setHatColor = _useSocketStore2.setHatColor;\n  useEffect(function () {\n    var socketConnection = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var temp2 = yield socketSingleton.getSocket();\n        console.log(\"temp2: \", temp2);\n        yield setSocket(temp2);\n      });\n      return function socketConnection() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    socketConnection();\n    var handleRoomJoined = function handleRoomJoined(userlist) {\n      console.log(\"Room Joined\");\n      console.log(userlist);\n      setParticipants(userlist);\n    };\n    console.log(\"socket: \", socket);\n    socket.on(\"roomJoined\", handleRoomJoined);\n    return function () {\n      socket.off(\"roomJoined\", handleRoomJoined);\n    };\n  }, []);\n  var sampleParticipants = [{\n    id: \"6AxDMLtjF4UcvLLOAAAJ\",\n    name: \"Manav Malhotra\",\n    role: \"Developer\",\n    hatRole: \"blue\",\n    isAdmin: true\n  }, {\n    id: \"1\",\n    name: \"Dummy User 2\",\n    role: \"Dummy Role 2\",\n    hatRole: \"red\",\n    isAdmin: false\n  }, {\n    id: \"1\",\n    name: \"Dummy User 2\",\n    role: \"Dummy Role 2\",\n    hatRole: \"white\",\n    isAdmin: false\n  }];\n  return _jsx(SafeAreaView, {\n    children: isAdmin ? _jsxs(View, {\n      children: [_jsx(TimerComponent, {\n        duration: \"10\"\n      }), _jsx(Text, {\n        children: \"Participants in the room:\"\n      }), _jsxs(Text, {\n        children: [\"Admin ID: \", userId]\n      }), _jsxs(Text, {\n        children: [\"Room ID: \", roomId]\n      }), participants.map(function (user) {\n        return _jsx(View, {\n          children: _jsx(UserCard, {\n            user: user\n          }, user.id)\n        }, user.id);\n      })]\n    }) : _jsxs(View, {\n      style: styles.participant,\n      children: [_jsxs(Text, {\n        children: [\"User ID: \", userId]\n      }), _jsxs(Text, {\n        children: [\"Room ID: \", roomId]\n      }), _jsx(HatColor, {\n        hatColor: hatColor\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  participant: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  }\n});\nexport default ParticipantsScreen;","map":{"version":3,"names":["React","useState","useEffect","Text","View","SafeAreaView","StyleSheet","useSocketStore","socketSingleton","HatColor","TimerComponent","UserCard","jsx","_jsx","jsxs","_jsxs","_require","require","useUserStore","ParticipantsScreen","_ref","navigation","_useSocketStore","socket","setSocket","_useState","_useState2","_slicedToArray","isAdmin","setIsAdmin","_useState3","_useState4","participants","setParticipants","_useUserStore","userName","userOrganisation","userDesignation","userProfilePic","_useSocketStore2","userId","setUserId","roomId","setRoomId","hatColor","setHatColor","socketConnection","_ref2","_asyncToGenerator","temp2","getSocket","console","log","apply","arguments","handleRoomJoined","userlist","on","off","sampleParticipants","id","name","role","hatRole","children","duration","map","user","style","styles","participant","create","fontSize","fontWeight"],"sources":["C:/Users/manav/projects/ironman_client/components/ParticipantsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Text, View, SafeAreaView, StyleSheet } from \"react-native\";\r\nimport { useSocketStore } from \"../store\";\r\nimport socketSingleton from \"../SocketManager\";\r\nimport HatColor from \"./HatColor\";\r\nimport TimerComponent from \"./TimerComponent\";\r\nimport UserCard from \"./UserCard\";\r\nconst { useUserStore } = require(\"../store\");\r\n\r\nconst ParticipantsScreen = ({ navigation }) => {\r\n\r\n  const {socket, setSocket} = useSocketStore();\r\n\r\n  const [isAdmin, setIsAdmin] = useState(true);\r\n  const [participants, setParticipants] = useState([]);\r\n\r\n  const { userName, userOrganisation, userDesignation, userProfilePic } =\r\n    useUserStore();\r\n\r\n  const { userId, setUserId, roomId, setRoomId, hatColor, setHatColor } =\r\n    useSocketStore();\r\n\r\n  useEffect(() => {\r\n    const socketConnection = async () => {\r\n      let temp2 = await socketSingleton.getSocket();\r\n      console.log(\"temp2: \", temp2);\r\n      await setSocket(temp2);\r\n    };\r\n    socketConnection();\r\n\r\n    const handleRoomJoined = (userlist) => {\r\n      console.log(\"Room Joined\");\r\n      console.log(userlist);\r\n      setParticipants(userlist);\r\n    };\r\n    console.log(\"socket: \", socket);\r\n    socket.on(\"roomJoined\", handleRoomJoined);\r\n  \r\n    return () => {\r\n      socket.off(\"roomJoined\", handleRoomJoined);\r\n    };\r\n  }, []);\r\n\r\n   \r\n  \r\n  let sampleParticipants = [\r\n    {\r\n      id: \"6AxDMLtjF4UcvLLOAAAJ\",\r\n      name: \"Manav Malhotra\",\r\n      role: \"Developer\",\r\n      hatRole: \"blue\",\r\n      isAdmin: true,\r\n    },\r\n    {\r\n      id: \"1\",\r\n      name: \"Dummy User 2\",\r\n      role: \"Dummy Role 2\",\r\n      hatRole: \"red\",\r\n      isAdmin: false,\r\n    },\r\n    {\r\n      id: \"1\",\r\n      name: \"Dummy User 2\",\r\n      role: \"Dummy Role 2\",\r\n      hatRole: \"white\",\r\n      isAdmin: false,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      {isAdmin ? (\r\n        <View>\r\n          <TimerComponent duration=\"10\" />\r\n          <Text>Participants in the room:</Text>\r\n          <Text>Admin ID: {userId}</Text>\r\n          <Text>Room ID: {roomId}</Text>\r\n          {\r\n            // rendeer the list of participants\r\n            participants.map((user) => {\r\n              return (\r\n                <View key={user.id}>\r\n                  <UserCard key={user.id} user={user} />\r\n                </View>\r\n              );\r\n            })\r\n          }\r\n        </View>\r\n      ) : (\r\n        <View style={styles.participant}>\r\n          <Text>User ID: {userId}</Text>\r\n          <Text>Room ID: {roomId}</Text>\r\n\r\n          <HatColor hatColor={hatColor} />\r\n        </View>\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  participant: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nexport default ParticipantsScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}