{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { horizontalScale, verticalScale } from \"../../metric\";\nimport { useUserStore } from \"../../store\";\nimport { Image } from \"expo-image\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport * as Avatar from \"react-native-paper/lib/module/components/Avatar/Avatar\";\nimport Button from \"react-native-paper/lib/module/components/Button/Button\";\nimport Surface from \"react-native-paper/lib/module/components/Surface\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Navbar = function Navbar(_ref) {\n  var navigation = _ref.navigation;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    showProfileMenu = _React$useState2[0],\n    setshowProfileMenu = _React$useState2[1];\n  var _useUserStore = useUserStore(),\n    userName = _useUserStore.userName,\n    userOrganisation = _useUserStore.userOrganisation,\n    userRole = _useUserStore.userRole,\n    userProfilePic = _useUserStore.userProfilePic,\n    setUserName = _useUserStore.setUserName,\n    setUserOrganisation = _useUserStore.setUserOrganisation,\n    setUserRole = _useUserStore.setUserRole,\n    setUserProfilePic = _useUserStore.setUserProfilePic;\n  useEffect(function () {\n    var fetchProfileData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var storedData = yield AsyncStorage.getItem(\"profileData\");\n          if (storedData) {\n            var parsedData = JSON.parse(storedData);\n            setUserName(parsedData.userName);\n            setUserOrganisation(parsedData.userOrganisation);\n            setUserRole(parsedData.userRole);\n            setUserProfilePic(parsedData.userProfilePic);\n            navigation.navigate(\"SessionScreen\");\n          }\n        } catch (error) {\n          console.error(\"Error fetching profile data:\", error);\n        }\n      });\n      return function fetchProfileData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchProfileData();\n  }, []);\n  var handleBackPress = function handleBackPress() {\n    navigation.goBack();\n  };\n  var tinkLogoSource = require(\"../../assets/tink-logo-1.png\");\n  var defaultProfilePicSource = require(\"../../assets/ellipse-15.svg\");\n  var toggleProfileMenu = function toggleProfileMenu() {\n    setshowProfileMenu(!showProfileMenu);\n  };\n  var ProfileMenu = function ProfileMenu() {\n    return _jsx(Surface, {\n      style: {\n        backgroundColor: \"white\",\n        position: \"absolute\",\n        top: 60,\n        right: 50,\n        borderRadius: 10,\n        zIndex: 1,\n        padding: 10\n      },\n      elevation: 4,\n      children: _jsx(Button, {\n        icon: \"logout\",\n        onPress: _asyncToGenerator(function* () {\n          yield AsyncStorage.multiRemove([\"profileData\"]);\n          navigation.navigate(\"Home\");\n        }),\n        textColor: \"black\",\n        children: \"Logout\"\n      })\n    });\n  };\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      style: styles.navbar,\n      children: [_jsx(TouchableOpacity, {\n        onPress: handleBackPress,\n        children: _jsx(Image, {\n          style: styles.icon,\n          source: require(\"../../assets/menu.svg\")\n        })\n      }), _jsx(Image, {\n        style: styles.tinkLogo,\n        source: tinkLogoSource\n      }), _jsx(TouchableOpacity, {\n        onPress: toggleProfileMenu,\n        children: _jsx(Avatar.Image, {\n          size: 50,\n          source: userProfilePic ? {\n            uri: userProfilePic\n          } : require(\"../../assets/ellipse-15.svg\")\n        })\n      }), showProfileMenu && _jsx(ProfileMenu, {})]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  navbar: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    marginTop: verticalScale(20),\n    paddingHorizontal: horizontalScale(20),\n    paddingVertical: verticalScale(20)\n  },\n  icon: {\n    width: 50,\n    height: 50,\n    borderRadius: 25\n  },\n  tinkLogo: {\n    width: 106,\n    height: 32\n  }\n});\nexport default Navbar;","map":{"version":3,"names":["React","useEffect","View","StyleSheet","TouchableOpacity","SafeAreaView","useNavigation","horizontalScale","verticalScale","useUserStore","Image","AsyncStorage","Avatar","Button","Surface","jsx","_jsx","jsxs","_jsxs","Navbar","_ref","navigation","_React$useState","useState","_React$useState2","_slicedToArray","showProfileMenu","setshowProfileMenu","_useUserStore","userName","userOrganisation","userRole","userProfilePic","setUserName","setUserOrganisation","setUserRole","setUserProfilePic","fetchProfileData","_ref2","_asyncToGenerator","storedData","getItem","parsedData","JSON","parse","navigate","error","console","apply","arguments","handleBackPress","goBack","tinkLogoSource","require","defaultProfilePicSource","toggleProfileMenu","ProfileMenu","style","backgroundColor","position","top","right","borderRadius","zIndex","padding","elevation","children","icon","onPress","multiRemove","textColor","styles","navbar","source","tinkLogo","size","uri","create","flexDirection","justifyContent","alignItems","marginTop","paddingHorizontal","paddingVertical","width","height"],"sources":["C:/Users/manav/projects/six-thinking-hats/components/ui/Navbar.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { horizontalScale, verticalScale } from \"../../metric\";\r\nimport { useUserStore } from \"../../store\";\r\nimport { Image } from \"expo-image\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { Avatar, Button } from \"react-native-paper\";\r\nimport { Surface } from \"react-native-paper\";\r\n\r\ntype NavbarProps = {\r\n  navigation: any; // Change 'any' to the appropriate type if possible\r\n};\r\n\r\nconst Navbar: React.FC<NavbarProps> = ({ navigation }) => {\r\n  const [showProfileMenu, setshowProfileMenu] = React.useState(false);\r\n\r\n  const {\r\n    userName,\r\n    userOrganisation,\r\n    userRole,\r\n    userProfilePic,\r\n    setUserName,\r\n    setUserOrganisation,\r\n    setUserRole,\r\n    setUserProfilePic,\r\n  } = useUserStore();\r\n\r\n  useEffect(() => {\r\n    const fetchProfileData = async () => {\r\n      try {\r\n        // Fetch profile data from local storage\r\n        const storedData = await AsyncStorage.getItem(\"profileData\");\r\n        if (storedData) {\r\n          const parsedData = JSON.parse(storedData);\r\n          setUserName(parsedData.userName);\r\n          setUserOrganisation(parsedData.userOrganisation);\r\n          setUserRole(parsedData.userRole);\r\n          setUserProfilePic(parsedData.userProfilePic);\r\n          navigation.navigate(\"SessionScreen\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching profile data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchProfileData();\r\n  }, []);\r\n\r\n  const handleBackPress = () => {\r\n    navigation.goBack();\r\n  };\r\n\r\n  const tinkLogoSource = require(\"../../assets/tink-logo-1.png\");\r\n  const defaultProfilePicSource = require(\"../../assets/ellipse-15.svg\");\r\n\r\n  const toggleProfileMenu = () => {\r\n    setshowProfileMenu(!showProfileMenu);\r\n  };\r\n\r\n  const ProfileMenu = () => {\r\n    return (\r\n      <Surface\r\n        style={{\r\n          backgroundColor: \"white\",\r\n          position: \"absolute\",\r\n          top: 60,\r\n          right: 50,\r\n          borderRadius: 10,\r\n          zIndex: 1,\r\n          padding: 10,\r\n        }}\r\n        elevation={4}\r\n      >\r\n        <Button\r\n          icon=\"logout\"\r\n          onPress={async () => {\r\n            await AsyncStorage.multiRemove([\"profileData\"]);\r\n            navigation.navigate(\"Home\");\r\n          }}\r\n          textColor=\"black\"\r\n        >\r\n          Logout\r\n        </Button>\r\n      </Surface>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      <View style={styles.navbar}>\r\n        <TouchableOpacity onPress={handleBackPress}>\r\n          <Image\r\n            style={styles.icon}\r\n            source={require(\"../../assets/menu.svg\")}\r\n          />\r\n        </TouchableOpacity>\r\n\r\n        <Image style={styles.tinkLogo} source={tinkLogoSource} />\r\n\r\n        <TouchableOpacity onPress={toggleProfileMenu}>\r\n          <Avatar.Image\r\n            size={50}\r\n            source={\r\n              userProfilePic\r\n                ? { uri: userProfilePic }\r\n                : require(\"../../assets/ellipse-15.svg\")\r\n            }\r\n          />\r\n        </TouchableOpacity>\r\n        {showProfileMenu && <ProfileMenu />}\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  navbar: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"white\",\r\n    marginTop: verticalScale(20),\r\n    paddingHorizontal: horizontalScale(20),\r\n    paddingVertical: verticalScale(20),\r\n  },\r\n  icon: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25,\r\n  },\r\n  tinkLogo: {\r\n    width: 106,\r\n    height: 32,\r\n  },\r\n});\r\n\r\nexport default Navbar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}