{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Accordion = function Accordion(_ref) {\n  var headerText = _ref.headerText,\n    content = _ref.content;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isExpanded = _useState2[0],\n    setIsExpanded = _useState2[1];\n  var toggleAccordion = function toggleAccordion() {\n    setIsExpanded(!isExpanded);\n  };\n  return _jsxs(View, {\n    children: [_jsx(TouchableOpacity, {\n      onPress: toggleAccordion,\n      children: _jsxs(View, {\n        style: styles.header,\n        children: [_jsx(Text, {\n          style: styles.headerText,\n          children: headerText\n        }), _jsx(Icon, {\n          name: isExpanded ? \"expand-less\" : \"expand-more\",\n          size: 30,\n          color: \"black\"\n        })]\n      })\n    }), isExpanded && _jsx(View, {\n      style: styles.content,\n      children: content\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  header: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 10,\n    backgroundColor: \"transparent\"\n  },\n  headerText: {\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  content: {\n    padding: 10\n  }\n});\nexport default Accordion;","map":{"version":3,"names":["React","useState","TouchableOpacity","View","Text","StyleSheet","Icon","jsx","_jsx","jsxs","_jsxs","Accordion","_ref","headerText","content","_useState","_useState2","_slicedToArray","isExpanded","setIsExpanded","toggleAccordion","children","onPress","style","styles","header","name","size","color","create","flexDirection","justifyContent","alignItems","padding","backgroundColor","fontSize","fontWeight"],"sources":["C:/Users/manav/projects/six-thinking-hats/components/ui/Accordion.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { TouchableOpacity, View, Text, StyleSheet } from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/MaterialIcons\";\r\n\r\ninterface AccordionProps {\r\n  headerText: string;\r\n  content: React.ReactNode;\r\n}\r\n\r\nconst Accordion = ({ headerText, content }: AccordionProps) => {\r\n  const [isExpanded, setIsExpanded] = useState(true);\r\n\r\n  const toggleAccordion = () => {\r\n    setIsExpanded(!isExpanded);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <TouchableOpacity onPress={toggleAccordion}>\r\n        <View style={styles.header}>\r\n          <Text style={styles.headerText}>{headerText}</Text>\r\n          <Icon\r\n            name={isExpanded ? \"expand-less\" : \"expand-more\"}\r\n            size={30}\r\n            color=\"black\"\r\n          />\r\n        </View>\r\n      </TouchableOpacity>\r\n      {isExpanded && <View style={styles.content}>{content}</View>}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n    backgroundColor: \"transparent\",\r\n  },\r\n\r\n  headerText: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n  },\r\n  content: {\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nexport default Accordion;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAExC,OAAOC,IAAI;AAAgD,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAO3D,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAAgD;EAAA,IAA1CC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;EACtC,IAAAC,SAAA,GAAoCd,QAAQ,CAAC,IAAI,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAEhC,IAAMI,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5BD,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EAED,OACER,KAAA,CAACP,IAAI;IAAAkB,QAAA,GACHb,IAAA,CAACN,gBAAgB;MAACoB,OAAO,EAAEF,eAAgB;MAAAC,QAAA,EACzCX,KAAA,CAACP,IAAI;QAACoB,KAAK,EAAEC,MAAM,CAACC,MAAO;QAAAJ,QAAA,GACzBb,IAAA,CAACJ,IAAI;UAACmB,KAAK,EAAEC,MAAM,CAACX,UAAW;UAAAQ,QAAA,EAAER;QAAU,CAAO,CAAC,EACnDL,IAAA,CAACF,IAAI;UACHoB,IAAI,EAAER,UAAU,GAAG,aAAa,GAAG,aAAc;UACjDS,IAAI,EAAE,EAAG;UACTC,KAAK,EAAC;QAAO,CACd,CAAC;MAAA,CACE;IAAC,CACS,CAAC,EAClBV,UAAU,IAAIV,IAAA,CAACL,IAAI;MAACoB,KAAK,EAAEC,MAAM,CAACV,OAAQ;MAAAO,QAAA,EAAEP;IAAO,CAAO,CAAC;EAAA,CACxD,CAAC;AAEX,CAAC;AAED,IAAMU,MAAM,GAAGnB,UAAU,CAACwB,MAAM,CAAC;EAC/BJ,MAAM,EAAE;IACNK,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE;EACnB,CAAC;EAEDrB,UAAU,EAAE;IACVsB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDtB,OAAO,EAAE;IACPmB,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AAEF,eAAetB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}