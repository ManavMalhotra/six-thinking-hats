{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { GoogleSignin } from \"@react-native-google-signin/google-signin\";\nimport auth from \"@react-native-firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function LoginPage() {\n  useEffect(function () {\n    GoogleSignin.configure({\n      webClientId: \"20463026653-qb1jbir5bb7ilfvkkg8gh8e1702igq9p.apps.googleusercontent.com\"\n    });\n  }, []);\n  var signIn = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        yield GoogleSignin.hasPlayServices();\n        var userInfo = yield GoogleSignin.signIn();\n        console.log(userInfo);\n        var googleCredential = auth.GoogleAuthProvider.credential(userInfo.idToken);\n        return auth().signInWithCredential(googleCredential);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function signIn() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    children: _jsx(Text, {\n      children: \"Auth\"\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","View","Text","GoogleSignin","auth","jsx","_jsx","LoginPage","configure","webClientId","signIn","_ref","_asyncToGenerator","hasPlayServices","userInfo","console","log","googleCredential","GoogleAuthProvider","credential","idToken","signInWithCredential","error","apply","arguments","children"],"sources":["C:/Users/manav/projects/ironman_client/components/LoginPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, Text } from \"react-native\";\r\nimport { GoogleSignin } from \"@react-native-google-signin/google-signin\";\r\nimport auth from \"@react-native-firebase/auth\"\r\nexport default function LoginPage() {\r\n  useEffect(() => {\r\n    GoogleSignin.configure({\r\n      webClientId:\r\n        \"20463026653-qb1jbir5bb7ilfvkkg8gh8e1702igq9p.apps.googleusercontent.com\",\r\n    });\r\n  }, []);\r\n\r\n  const signIn = async () => {\r\n    try {\r\n      await GoogleSignin.hasPlayServices();\r\n      const userInfo = await GoogleSignin.signIn();\r\n      console.log(userInfo);\r\n      const googleCredential = auth.GoogleAuthProvider.credential(\r\n        userInfo.idToken\r\n      );\r\n      return auth().signInWithCredential(googleCredential);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <View>\r\n      <Text>Auth</Text>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAEnD,SAASC,YAAY,QAAQ,2CAA2C;AACxE,OAAOC,IAAI,MAAM,6BAA6B;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAC9C,eAAe,SAASC,SAASA,CAAA,EAAG;EAClCP,SAAS,CAAC,YAAM;IACdG,YAAY,CAACK,SAAS,CAAC;MACrBC,WAAW,EACT;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,MAAM;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MACzB,IAAI;QACF,MAAMT,YAAY,CAACU,eAAe,CAAC,CAAC;QACpC,IAAMC,QAAQ,SAASX,YAAY,CAACO,MAAM,CAAC,CAAC;QAC5CK,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrB,IAAMG,gBAAgB,GAAGb,IAAI,CAACc,kBAAkB,CAACC,UAAU,CACzDL,QAAQ,CAACM,OACX,CAAC;QACD,OAAOhB,IAAI,CAAC,CAAC,CAACiB,oBAAoB,CAACJ,gBAAgB,CAAC;MACtD,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;MACpB;IACF,CAAC;IAAA,gBAZKZ,MAAMA,CAAA;MAAA,OAAAC,IAAA,CAAAY,KAAA,OAAAC,SAAA;IAAA;EAAA,GAYX;EAGD,OACElB,IAAA,CAACL,IAAI;IAAAwB,QAAA,EACHnB,IAAA,CAACJ,IAAI;MAAAuB,QAAA,EAAC;IAAI,CAAM;EAAC,CACb,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}