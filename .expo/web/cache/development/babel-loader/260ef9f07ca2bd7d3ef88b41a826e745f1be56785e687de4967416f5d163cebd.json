{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSocketStore } from \"../store\";\nimport socketSingleton from \"../SocketManager\";\nimport HatColor from \"./HatColor\";\nimport TimerComponent from \"./TimerComponent\";\nimport UserCard from \"./UserCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ParticipantsScreen = function ParticipantsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var userId = useSocketStore(function (state) {\n    return state.userId;\n  });\n  var isAdmin = useSocketStore(function (state) {\n    return state.isAdmin;\n  });\n  var hatColor = useSocketStore(function (state) {\n    return state.hatColor;\n  });\n  var roomId = useSocketStore(function (state) {\n    return state.roomId;\n  });\n  var mySession = useSocketStore(function (state) {\n    return state.mySession;\n  });\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    participants = _useState2[0],\n    setParticipants = _useState2[1];\n  var socket = socketSingleton.getSocket();\n  useEffect(function () {\n    socket.on(\"roomData\", function (_ref2) {\n      var users = _ref2.users;\n      console.log(\"Event roomData received\");\n      console.log(users);\n    });\n  }, []);\n  return _jsx(Text, {\n    children: \"TESTING\"\n  });\n};\nexport default ParticipantsScreen;","map":{"version":3,"names":["React","useState","useEffect","Text","View","SafeAreaView","StyleSheet","useSocketStore","socketSingleton","HatColor","TimerComponent","UserCard","jsx","_jsx","ParticipantsScreen","_ref","navigation","userId","state","isAdmin","hatColor","roomId","mySession","_useState","_useState2","_slicedToArray","participants","setParticipants","socket","getSocket","on","_ref2","users","console","log","children"],"sources":["C:/Users/manav/projects/ironman_client/components/ParticipantsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Text, View, SafeAreaView, StyleSheet } from \"react-native\";\r\nimport { useSocketStore } from \"../store\";\r\nimport socketSingleton from \"../SocketManager\";\r\nimport HatColor from \"./HatColor\";\r\nimport TimerComponent from \"./TimerComponent\";\r\nimport UserCard from \"./UserCard\";\r\n\r\nconst ParticipantsScreen = ({ navigation }) => {\r\n\r\n  // data which come from store \r\n  // userId: null,\r\n  // isAdmin: null,\r\n  // hatColor: null,\r\n  // roomId: null,\r\n  // mySession: [],\r\n\r\n  const userId = useSocketStore((state) => state.userId);\r\n  const isAdmin = useSocketStore((state) => state.isAdmin);\r\n  const hatColor = useSocketStore((state) => state.hatColor);\r\n  const roomId = useSocketStore((state) => state.roomId);\r\n  const mySession = useSocketStore((state) => state.mySession);\r\n  \r\n  const [participants, setParticipants] = useState([]);\r\n\r\n  const socket = socketSingleton.getSocket();\r\n\r\n  useEffect(() => {\r\n    socket.on(\"roomData\", ({users}) => {\r\n      console.log(\"Event roomData received\");\r\n      console.log(users);\r\n\r\n      \r\n\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Text>TESTING</Text>\r\n  )\r\n\r\n\r\n\r\n  \r\n\r\n};\r\n\r\nexport default ParticipantsScreen;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,UAAA;AAEnD,SAASC,cAAc;AACvB,OAAOC,eAAe;AACtB,OAAOC,QAAQ;AACf,OAAOC,cAAc;AACrB,OAAOC,QAAQ;AAAmB,SAAAC,GAAA,IAAAC,IAAA;AAElC,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAStC,IAAMC,MAAM,GAAGV,cAAc,CAAC,UAACW,KAAK;IAAA,OAAKA,KAAK,CAACD,MAAM;EAAA,EAAC;EACtD,IAAME,OAAO,GAAGZ,cAAc,CAAC,UAACW,KAAK;IAAA,OAAKA,KAAK,CAACC,OAAO;EAAA,EAAC;EACxD,IAAMC,QAAQ,GAAGb,cAAc,CAAC,UAACW,KAAK;IAAA,OAAKA,KAAK,CAACE,QAAQ;EAAA,EAAC;EAC1D,IAAMC,MAAM,GAAGd,cAAc,CAAC,UAACW,KAAK;IAAA,OAAKA,KAAK,CAACG,MAAM;EAAA,EAAC;EACtD,IAAMC,SAAS,GAAGf,cAAc,CAAC,UAACW,KAAK;IAAA,OAAKA,KAAK,CAACI,SAAS;EAAA,EAAC;EAE5D,IAAAC,SAAA,GAAwCtB,QAAQ,CAAC,EAAE,CAAC;IAAAuB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EAEpC,IAAMI,MAAM,GAAGpB,eAAe,CAACqB,SAAS,CAAC,CAAC;EAE1C3B,SAAS,CAAC,YAAM;IACd0B,MAAM,CAACE,EAAE,CAAC,UAAU,EAAE,UAAAC,KAAA,EAAa;MAAA,IAAXC,KAAK,GAAAD,KAAA,CAALC,KAAK;MAC3BC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtCD,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAIpB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,OACEnB,IAAA,CAACV,IAAI;IAAAgC,QAAA,EAAC;EAAO,CAAM,CAAC;AAOxB,CAAC;AAED,eAAerB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}