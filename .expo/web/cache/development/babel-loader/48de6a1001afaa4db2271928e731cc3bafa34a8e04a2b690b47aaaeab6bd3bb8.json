{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useSocketStore from \"../store\";\nimport HatColor from \"./HatColor\";\nimport TimerComponent from \"./TimerComponent\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ParticipantsScreen = function ParticipantsScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    participants = _useState2[0],\n    setParticipants = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    numberOfParticipants = _useState4[0],\n    setNumberOfParticipants = _useState4[1];\n  var socket = useSocketStore(function (state) {\n    return state.socket;\n  });\n  var userId = useSocketStore(function (state) {\n    return state.userId;\n  });\n  var isAdmin = useSocketStore(function (state) {\n    return state.isAdmin;\n  });\n  var hatColor = useSocketStore(function (state) {\n    return state.hatColor;\n  });\n  var roomId = useSocketStore(function (state) {\n    return state.roomId;\n  });\n  var setHatColor = useSocketStore(function (state) {\n    return state.setHatColor;\n  });\n  var setAdmin = useSocketStore(function (state) {\n    return state.setAdmin;\n  });\n  console.log(\"roomId Participants: \", roomId);\n  useEffect(function () {\n    if (!socket) {\n      navigation.navigate(\"Home\");\n    }\n    socket.on(\"roomData\", function (_ref2) {\n      var users = _ref2.users;\n      setNumberOfParticipants(users.length);\n      for (var i = 0; i < users.length; i++) {\n        console.log(users[i]);\n        users[i].name = users[i].name || \"Anonymous\";\n        if (users[i].id === userId) {\n          setHatColor(users[i].hatRole);\n        }\n      }\n      setParticipants(users);\n    });\n  }, []);\n  console.log(\"userId: \", userId);\n  console.log(\"isAdmin: \", isAdmin);\n  console.log(\"hatColor: \", hatColor);\n  return _jsx(SafeAreaView, {\n    children: isAdmin ? _jsxs(View, {\n      children: [_jsx(TimerComponent, {\n        duration: \"10\"\n      }), _jsx(Text, {\n        children: \"Participants in the room:\"\n      }), _jsxs(Text, {\n        children: [\"Admin ID: \", userId]\n      }), _jsxs(Text, {\n        children: [\"Room ID: \", roomId]\n      }), participants.map(function (participant) {\n        return _jsxs(Text, {\n          style: styles.participant,\n          children: [participant.id, \" : \", participant.hatRole]\n        }, participant.id);\n      })]\n    }) : _jsxs(View, {\n      style: styles.participant,\n      children: [_jsxs(Text, {\n        children: [\"User ID: \", userId]\n      }), _jsxs(Text, {\n        children: [\"Room ID: \", roomId]\n      }), _jsx(HatColor, {\n        hatColor: hatColor\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  participant: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  }\n});\nexport default ParticipantsScreen;","map":{"version":3,"names":["React","useState","useEffect","Text","View","SafeAreaView","StyleSheet","useSocketStore","HatColor","TimerComponent","jsx","_jsx","jsxs","_jsxs","ParticipantsScreen","_ref","navigation","route","_useState","_useState2","_slicedToArray","participants","setParticipants","_useState3","_useState4","numberOfParticipants","setNumberOfParticipants","socket","state","userId","isAdmin","hatColor","roomId","setHatColor","setAdmin","console","log","navigate","on","_ref2","users","length","i","name","id","hatRole","children","duration","map","participant","style","styles","create","fontSize","fontWeight"],"sources":["C:/Users/manav/projects/ironman_client/components/ParticipantsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Text, View, SafeAreaView, StyleSheet } from \"react-native\";\r\nimport useSocketStore from \"../store\";\r\nimport HatColor from \"./HatColor\";\r\nimport TimerComponent from \"./TimerComponent\";\r\n\r\nconst ParticipantsScreen = ({ navigation, route }) => {\r\n  // const [userId, setUserId] = useState(\"\");\r\n  const [participants, setParticipants] = useState([]);\r\n  // const { userId, isAdmin, hatColor } = useSocketStore();\r\n  const [numberOfParticipants, setNumberOfParticipants] = useState(0);\r\n\r\n  const socket = useSocketStore((state) => state.socket);\r\n  const userId = useSocketStore((state) => state.userId);\r\n  const isAdmin = useSocketStore((state) => state.isAdmin);\r\n  const hatColor = useSocketStore((state) => state.hatColor);\r\n  const roomId = useSocketStore((state) => state.roomId);\r\n  const setHatColor = useSocketStore((state) => state.setHatColor);\r\n  const setAdmin = useSocketStore((state) => state.setAdmin);\r\n\r\n\r\n  console.log(\"roomId Participants: \", roomId);\r\n  useEffect(() => {\r\n    if (!socket) {\r\n      navigation.navigate(\"Home\");\r\n    }\r\n    // Listen for the roomJoined event\r\n    socket.on(\"roomData\", ({ users }) => {\r\n      // Update participants state with the received data\r\n      setNumberOfParticipants(users.length);\r\n      for (let i = 0; i < users.length; i++) {\r\n        console.log(users[i]);\r\n        users[i].name = users[i].name || \"Anonymous\";\r\n        if(users[i].id === userId) {\r\n          setHatColor(users[i].hatRole);\r\n        }\r\n      }\r\n      setParticipants(users);\r\n    });\r\n  }, []);\r\n  console.log(\"userId: \", userId);\r\n  console.log(\"isAdmin: \", isAdmin);\r\n  console.log(\"hatColor: \", hatColor);\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      {isAdmin ? (\r\n        <View>\r\n          <TimerComponent duration=\"10\" />\r\n          <Text>Participants in the room:</Text>\r\n          <Text>Admin ID: {userId}</Text>\r\n          <Text>Room ID: {roomId}</Text>\r\n          {participants.map((participant) => (\r\n            <Text style={styles.participant} key={participant.id}>\r\n              {participant.id} : {participant.hatRole}\r\n            </Text>\r\n          ))}\r\n        </View>\r\n      ) : (\r\n        <View style={styles.participant}>\r\n          <Text>User ID: {userId}</Text>\r\n          <Text>Room ID: {roomId}</Text>\r\n\r\n          <HatColor hatColor={hatColor} />\r\n        </View>\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  participant: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nexport default ParticipantsScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}