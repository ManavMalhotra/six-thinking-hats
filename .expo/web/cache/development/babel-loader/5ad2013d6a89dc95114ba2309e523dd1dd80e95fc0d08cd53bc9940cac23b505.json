{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { GoogleSignin } from \"@react-native-google-signin/google-signin\";\nimport auth from \"@react-native-firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginPage() {\n  GoogleSignin.configure({\n    webClientId: \"20463026653-qb1jbir5bb7ilfvkkg8gh8e1702igq9p.apps.googleusercontent.com\"\n  });\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    initializing = _useState2[0],\n    setInitializing = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    user = _useState4[0],\n    setUser = _useState4[1];\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n  }\n  useEffect(function () {\n    var subscriber = auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber;\n  }, []);\n  function onGoogleButtonPress() {\n    return _onGoogleButtonPress.apply(this, arguments);\n  }\n  function _onGoogleButtonPress() {\n    _onGoogleButtonPress = _asyncToGenerator(function* () {\n      yield GoogleSignin.hasPlayServices({\n        showPlayServicesUpdateDialog: true\n      });\n      var _yield$GoogleSignin$s = yield GoogleSignin.signIn(),\n        idToken = _yield$GoogleSignin$s.idToken;\n      var googleCredential = auth.GoogleAuthProvider.credential(idToken);\n      var user = yield auth().signInWithCredential(googleCredential);\n      user.then(function (res) {\n        console.log(res);\n      });\n    });\n    return _onGoogleButtonPress.apply(this, arguments);\n  }\n  if (initializing) return null;\n  if (!user) {\n    return _jsx(View, {\n      children: _jsx(Text, {\n        children: \"Login\"\n      })\n    });\n  } else {\n    return _jsx(View, {\n      children: _jsxs(Text, {\n        children: [\"Welcome \", user.email]\n      })\n    });\n  }\n}","map":{"version":3,"names":["React","useState","useEffect","View","Text","GoogleSignin","auth","jsx","_jsx","jsxs","_jsxs","LoginPage","configure","webClientId","_useState","_useState2","_slicedToArray","initializing","setInitializing","_useState3","_useState4","user","setUser","onAuthStateChanged","subscriber","onGoogleButtonPress","_onGoogleButtonPress","apply","arguments","_asyncToGenerator","hasPlayServices","showPlayServicesUpdateDialog","_yield$GoogleSignin$s","signIn","idToken","googleCredential","GoogleAuthProvider","credential","signInWithCredential","then","res","console","log","children","email"],"sources":["C:/Users/manav/projects/ironman_client/components/LoginPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, Text } from \"react-native\";\r\n\r\nimport { GoogleSignin } from \"@react-native-google-signin/google-signin\";\r\nimport auth from \"@react-native-firebase/auth\";\r\n\r\nexport default function LoginPage() {\r\n  GoogleSignin.configure({\r\n    webClientId:\r\n      \"20463026653-qb1jbir5bb7ilfvkkg8gh8e1702igq9p.apps.googleusercontent.com\",\r\n  });\r\n  // Set an initializing state whilst Firebase connects\r\n  const [initializing, setInitializing] = useState(true);\r\n  const [user, setUser] = useState();\r\n\r\n  // Handle user state changes\r\n  function onAuthStateChanged(user) {\r\n    setUser(user);\r\n    if (initializing) setInitializing(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const subscriber = auth().onAuthStateChanged(onAuthStateChanged);\r\n    return subscriber; // unsubscribe on unmount\r\n  }, []);\r\n  async function onGoogleButtonPress() {\r\n    // Check if your device supports Google Play\r\n    await GoogleSignin.hasPlayServices({ showPlayServicesUpdateDialog: true });\r\n    // Get the users ID token\r\n    const { idToken } = await GoogleSignin.signIn();\r\n\r\n    // Create a Google credential with the token\r\n    const googleCredential = auth.GoogleAuthProvider.credential(idToken);\r\n\r\n    // Sign-in the user with the credential\r\n    const user = await auth().signInWithCredential(googleCredential);\r\n\r\n    user.then((res) => {\r\n      console.log(res);\r\n    });\r\n  }\r\n\r\n  if (initializing) return null;\r\n\r\n  if (!user) {\r\n    return (\r\n      <View>\r\n        <Text>Login</Text>\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View>\r\n        <Text>Welcome {user.email}</Text>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAGnD,SAASC,YAAY,QAAQ,2CAA2C;AACxE,OAAOC,IAAI,MAAM,6BAA6B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/C,eAAe,SAASC,SAASA,CAAA,EAAG;EAClCN,YAAY,CAACO,SAAS,CAAC;IACrBC,WAAW,EACT;EACJ,CAAC,CAAC;EAEF,IAAAC,SAAA,GAAwCb,QAAQ,CAAC,IAAI,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC,IAAAI,UAAA,GAAwBlB,QAAQ,CAAC,CAAC;IAAAmB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA3BE,IAAI,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EAGpB,SAASG,kBAAkBA,CAACF,IAAI,EAAE;IAChCC,OAAO,CAACD,IAAI,CAAC;IACb,IAAIJ,YAAY,EAAEC,eAAe,CAAC,KAAK,CAAC;EAC1C;EAEAhB,SAAS,CAAC,YAAM;IACd,IAAMsB,UAAU,GAAGlB,IAAI,CAAC,CAAC,CAACiB,kBAAkB,CAACA,kBAAkB,CAAC;IAChE,OAAOC,UAAU;EACnB,CAAC,EAAE,EAAE,CAAC;EAAC,SACQC,mBAAmBA,CAAA;IAAA,OAAAC,oBAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,qBAAA;IAAAA,oBAAA,GAAAG,iBAAA,CAAlC,aAAqC;MAEnC,MAAMxB,YAAY,CAACyB,eAAe,CAAC;QAAEC,4BAA4B,EAAE;MAAK,CAAC,CAAC;MAE1E,IAAAC,qBAAA,SAA0B3B,YAAY,CAAC4B,MAAM,CAAC,CAAC;QAAvCC,OAAO,GAAAF,qBAAA,CAAPE,OAAO;MAGf,IAAMC,gBAAgB,GAAG7B,IAAI,CAAC8B,kBAAkB,CAACC,UAAU,CAACH,OAAO,CAAC;MAGpE,IAAMb,IAAI,SAASf,IAAI,CAAC,CAAC,CAACgC,oBAAoB,CAACH,gBAAgB,CAAC;MAEhEd,IAAI,CAACkB,IAAI,CAAC,UAACC,GAAG,EAAK;QACjBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB,CAAC,CAAC;IACJ,CAAC;IAAA,OAAAd,oBAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAED,IAAIX,YAAY,EAAE,OAAO,IAAI;EAE7B,IAAI,CAACI,IAAI,EAAE;IACT,OACEb,IAAA,CAACL,IAAI;MAAAwC,QAAA,EACHnC,IAAA,CAACJ,IAAI;QAAAuC,QAAA,EAAC;MAAK,CAAM;IAAC,CACd,CAAC;EAEX,CAAC,MAAM;IACL,OACEnC,IAAA,CAACL,IAAI;MAAAwC,QAAA,EACHjC,KAAA,CAACN,IAAI;QAAAuC,QAAA,GAAC,UAAQ,EAACtB,IAAI,CAACuB,KAAK;MAAA,CAAO;IAAC,CAC7B,CAAC;EAEX;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}