{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useState, useEffect } from \"react\";\nimport socketSingleton from \"../SocketManager\";\nimport { useSocketStore } from \"../store\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar JoinSession = function JoinSession(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    roomId = _useState2[0],\n    setroomId = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    socket = _useState4[0],\n    setSocket = _useState4[1];\n  var userId = useSocketStore(function (state) {\n    return state.userId;\n  });\n  var setuserId = useSocketStore(function (state) {\n    return state.setuserId;\n  });\n  var isAdmin = useSocketStore(function (state) {\n    return state.isAdmin;\n  });\n  var setAdmin = useSocketStore(function (state) {\n    return state.setAdmin;\n  });\n  var setMySession = useSocketStore(function (state) {\n    return state.setMySession;\n  });\n  useEffect(function () {\n    console.log(\"_______JoinSession.js_______\");\n    console.log(\"socket initialize: \");\n    socketSingleton.initSocket();\n    setSocket(socketSingleton.getSocket());\n  }, []);\n  var joinRoom = function joinRoom() {\n    console.log(\"Joining room...\");\n    var newUserId = socket.id;\n    setuserId(newUserId);\n    var data = {\n      roomId: roomId,\n      userId: newUserId\n    };\n    socket.emit(\"joinRoom\", data);\n    setAdmin(false);\n    setMySession(function (prev) {\n      return prev.append(data);\n    });\n    navigation.navigate(\"Participants\", {\n      roomId: roomId,\n      userId: userId,\n      isAdmin: false\n    });\n  };\n  return _jsxs(SafeAreaView, {\n    children: [_jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Join Session\"\n      }), _jsx(TextInput, {\n        style: styles.codeTextBox,\n        onChangeText: function onChangeText(text) {\n          setroomId(text);\n        }\n      })]\n    }), _jsx(Button, {\n      title: \"Join\",\n      onPress: joinRoom\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  codeTextBox: {\n    borderWidth: 1,\n    borderColor: \"black\",\n    borderRadius: 5,\n    padding: 5,\n    width: 200\n  }\n});\nexport default JoinSession;","map":{"version":3,"names":["useState","useEffect","socketSingleton","useSocketStore","jsx","_jsx","jsxs","_jsxs","JoinSession","_ref","navigation","_useState","_useState2","_slicedToArray","roomId","setroomId","_useState3","_useState4","socket","setSocket","userId","state","setuserId","isAdmin","setAdmin","setMySession","console","log","initSocket","getSocket","joinRoom","newUserId","id","data","emit","prev","append","navigate","SafeAreaView","children","View","Text","TextInput","style","styles","codeTextBox","onChangeText","text","Button","title","onPress","StyleSheet","create","borderWidth","borderColor","borderRadius","padding","width"],"sources":["C:/Users/manav/projects/ironman_client/components/JoinSession.js"],"sourcesContent":["import {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  Button,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport socketSingleton from \"../SocketManager\";\r\nimport { useSocketStore } from \"../store\";\r\n\r\nconst JoinSession = ({ navigation }) => {\r\n  // const [socket, setSocket] = useState(null);\r\n  // const [userId, setUserId] = useState(\"\");\r\n  const [roomId, setroomId] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n  const userId = useSocketStore((state) => state.userId);\r\n  const setuserId = useSocketStore((state) => state.setuserId);\r\n  const isAdmin = useSocketStore((state) => state.isAdmin);\r\n  const setAdmin = useSocketStore((state) => state.setAdmin);\r\n  const setMySession = useSocketStore((state) => state.setMySession);\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(\"_______JoinSession.js_______\")\r\n    console.log(\"socket initialize: \");\r\n    socketSingleton.initSocket();\r\n    setSocket(socketSingleton.getSocket());\r\n  }, []);\r\n  const joinRoom = () => {\r\n    console.log(\"Joining room...\");\r\n    const newUserId = socket.id;\r\n    setuserId(newUserId);\r\n\r\n    const data = { roomId, userId: newUserId };\r\n\r\n    socket.emit(\"joinRoom\", data);\r\n    setAdmin(false);\r\n    setMySession((prev) => prev.append(data));\r\n\r\n    navigation.navigate(\"Participants\", { roomId, userId, isAdmin: false });\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      <View>\r\n        <Text>Join Session</Text>\r\n        <TextInput\r\n          style={styles.codeTextBox}\r\n          onChangeText={(text) => {\r\n            setroomId(text);\r\n          }}\r\n        />\r\n      </View>\r\n\r\n      <Button title=\"Join\" onPress={joinRoom} />\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  codeTextBox: {\r\n    borderWidth: 1,\r\n    borderColor: \"black\",\r\n    borderRadius: 5,\r\n    padding: 5,\r\n    width: 200,\r\n  },\r\n});\r\n\r\nexport default JoinSession;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}