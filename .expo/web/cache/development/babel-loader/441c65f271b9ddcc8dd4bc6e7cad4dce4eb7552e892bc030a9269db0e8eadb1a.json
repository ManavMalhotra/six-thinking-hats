{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport socketSingleton from \"../../SocketManager\";\nimport TimerComponent from \"../ui/TimerComponent\";\nimport UserCard from \"../ui/UserCard\";\nimport { useUserStore, useSocketStore } from \"../../store\";\nimport Text from \"react-native-paper/lib/module/components/Typography/Text\";\nimport { Image } from \"expo-image\";\nimport Button from \"react-native-paper/lib/module/components/Button/Button\";\nimport * as Clipboard from \"expo-clipboard\";\nimport emptySession from \"../../assets/emptypartcipants.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ParticipantsScreen = function ParticipantsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useSocketStore = useSocketStore(),\n    socket = _useSocketStore.socket,\n    setSocket = _useSocketStore.setSocket;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    participants = _useState2[0],\n    setParticipants = _useState2[1];\n  var _useUserStore = useUserStore(),\n    userName = _useUserStore.userName,\n    userOrganisation = _useUserStore.userOrganisation,\n    userDesignation = _useUserStore.userDesignation,\n    userProfilePic = _useUserStore.userProfilePic;\n  var _useSocketStore2 = useSocketStore(),\n    userId = _useSocketStore2.userId,\n    setUserId = _useSocketStore2.setUserId,\n    roomId = _useSocketStore2.roomId,\n    hatColor = _useSocketStore2.hatColor,\n    setHatColor = _useSocketStore2.setHatColor,\n    isAdmin = _useSocketStore2.isAdmin;\n  useEffect(function () {\n    console.log(\"_______JoinSession.js_______\");\n    console.log(\"socket initialize: \");\n    socketConnection();\n  }, []);\n  var socketConnection = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var initializedSocket = yield socketSingleton.initSocket();\n      setSocket(initializedSocket);\n      initializedSocket.on(\"connect\", function () {\n        console.log(\"socket connected: \", initializedSocket.id);\n        var id = initializedSocket.id;\n        setUserId(id);\n        console.log(\"socket id: \", id);\n      });\n    });\n    return function socketConnection() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    socket.on(\"roomJoined\", function (data) {\n      console.log(\"roomJoined event received: \", data);\n      setParticipants(data);\n    });\n    return function () {\n      socket.off(\"roomJoined\");\n    };\n  }, [participants]);\n  var sampleParticipants = [{\n    id: \"6AxDMLtjF4UcvLLOAAAJ\",\n    name: \"Manav Malhotra\",\n    role: \"Developer\",\n    hatRole: \"blue\",\n    isAdmin: true\n  }, {\n    id: \"2\",\n    name: \"Dummy User 2\",\n    role: \"Dummy Role 2\",\n    hatRole: \"red\",\n    isAdmin: false\n  }, {\n    id: \"3\",\n    name: \"Dummy User 3\",\n    role: \"Dummy Role 3\",\n    hatRole: \"white\",\n    isAdmin: false\n  }];\n  return _jsx(SafeAreaView, {\n    children: isAdmin ? _jsxs(View, {\n      children: [_jsx(TimerComponent, {\n        duration: \"10\"\n      }), _jsx(Text, {\n        children: \"Participants in the room:\"\n      }), _jsxs(Text, {\n        children: [\"Admin ID: \", userId.toString()]\n      }), _jsxs(Text, {\n        children: [\"Room ID: \", roomId.toString()]\n      }), _jsx(Button, {\n        icon: \"content-copy\",\n        mode: \"contained\",\n        onPress: function onPress() {\n          Clipboard.setStringAsync(roomId.toString()).then(function () {});\n        },\n        children: \"Copy Room ID\"\n      }), participants.map(function (user, index) {\n        return _jsx(UserCard, {\n          user: user\n        }, index);\n      })]\n    }) : _jsxs(View, {\n      children: [_jsxs(Text, {\n        variant: \"headlineSmall\",\n        style: {\n          color: \"black\"\n        },\n        children: [\"Name: \", userName]\n      }), _jsx(Image, {\n        source: emptySession,\n        style: {\n          width: 200,\n          height: 200\n        }\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  participant: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  }\n});\nexport default ParticipantsScreen;","map":{"version":3,"names":["React","useState","useEffect","View","SafeAreaView","StyleSheet","socketSingleton","TimerComponent","UserCard","useUserStore","useSocketStore","Text","Image","Button","Clipboard","emptySession","jsx","_jsx","jsxs","_jsxs","ParticipantsScreen","_ref","navigation","_useSocketStore","socket","setSocket","_useState","_useState2","_slicedToArray","participants","setParticipants","_useUserStore","userName","userOrganisation","userDesignation","userProfilePic","_useSocketStore2","userId","setUserId","roomId","hatColor","setHatColor","isAdmin","console","log","socketConnection","_ref2","_asyncToGenerator","initializedSocket","initSocket","on","id","apply","arguments","data","off","sampleParticipants","name","role","hatRole","children","duration","toString","icon","mode","onPress","setStringAsync","then","map","user","index","variant","style","color","source","width","height","styles","create","participant","fontSize","fontWeight"],"sources":["C:/Users/manav/projects/six-thinking-hats/components/screens/ParticipantsScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, SafeAreaView, StyleSheet } from \"react-native\";\r\nimport socketSingleton from \"../../SocketManager\";\r\nimport HatColor from \"../ui/HatColor\";\r\nimport TimerComponent from \"../ui/TimerComponent\";\r\nimport UserCard from \"../ui/UserCard\";\r\nimport { useUserStore, useSocketStore } from \"../../store\";\r\nimport { Text } from \"react-native-paper\";\r\n\r\nimport { Image } from \"expo-image\";\r\n\r\nimport { Share } from \"react-native\";\r\n\r\nimport { Button } from \"react-native-paper\";\r\nimport * as Clipboard from \"expo-clipboard\";\r\n\r\nimport emptySession from \"../../assets/emptypartcipants.png\";\r\n\r\nconst ParticipantsScreen = ({ navigation }) => {\r\n  const { socket, setSocket } = useSocketStore();\r\n\r\n  const [participants, setParticipants] = useState([]);\r\n\r\n  const { userName, userOrganisation, userDesignation, userProfilePic } =\r\n    useUserStore();\r\n\r\n  const { userId, setUserId, roomId, hatColor, setHatColor, isAdmin } =\r\n    useSocketStore();\r\n\r\n  useEffect(() => {\r\n    console.log(\"_______JoinSession.js_______\");\r\n    console.log(\"socket initialize: \");\r\n    socketConnection();\r\n  }, []);\r\n\r\n  const socketConnection = async () => {\r\n    const initializedSocket = await socketSingleton.initSocket();\r\n    setSocket(initializedSocket);\r\n    initializedSocket.on(\"connect\", () => {\r\n      console.log(\"socket connected: \", initializedSocket.id);\r\n      let id = initializedSocket.id;\r\n      setUserId(id);\r\n      console.log(\"socket id: \", id);\r\n    });\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    socket.on(\"roomJoined\", (data) => {\r\n      console.log(\"roomJoined event received: \", data);\r\n      setParticipants(data);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"roomJoined\");\r\n    };\r\n  }, [participants]);\r\n\r\n  // whenver participants list change update the particiapnats\r\n\r\n  let sampleParticipants = [\r\n    {\r\n      id: \"6AxDMLtjF4UcvLLOAAAJ\",\r\n      name: \"Manav Malhotra\",\r\n      role: \"Developer\",\r\n      hatRole: \"blue\",\r\n      isAdmin: true,\r\n    },\r\n    {\r\n      id: \"2\", // Unique ID\r\n      name: \"Dummy User 2\",\r\n      role: \"Dummy Role 2\",\r\n      hatRole: \"red\",\r\n      isAdmin: false,\r\n    },\r\n    {\r\n      id: \"3\", // Unique ID\r\n      name: \"Dummy User 3\", // Adjust names to be unique as well if needed\r\n      role: \"Dummy Role 3\", // Adjust roles to be unique as well if needed\r\n      hatRole: \"white\",\r\n      isAdmin: false,\r\n    },\r\n  ];\r\n  return (\r\n    <SafeAreaView>\r\n      {isAdmin ? (\r\n        <View>\r\n          <TimerComponent duration=\"10\" />\r\n          <Text>Participants in the room:</Text>\r\n          <Text>Admin ID: {userId.toString()}</Text>\r\n          <Text>Room ID: {roomId.toString()}</Text>\r\n          <Button\r\n            icon=\"content-copy\"\r\n            mode=\"contained\"\r\n            onPress={() => {\r\n              Clipboard.setStringAsync(roomId.toString()).then(() => {});\r\n            }}\r\n          >\r\n            Copy Room ID\r\n          </Button>\r\n          {participants.map((user, index) => {\r\n            return <UserCard key={index} user={user} />;\r\n          })}\r\n        </View>\r\n      ) : (\r\n        <View>\r\n          <Text variant=\"headlineSmall\" style={{ color: \"black\" }}>\r\n            Name: {userName}\r\n          </Text>\r\n          {/* <HatColor hatColor={hatColor} /> */}\r\n          <Image source={emptySession} style={{ width: 200, height: 200 }} />\r\n        </View>\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  participant: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nexport default ParticipantsScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}